gg.setVisible(true)

function menu()
    gg.clearResults()  -- –û—á–∏—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    active = 0

    -- –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ—Ü–µ—Å—Å–µ
    local info = gg.getTargetInfo()
    local packageName = info and info.packageName or "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å"
    local architecture = info and (info.architecture == "arm64" and "64-–±–∏—Ç" or "32-–±–∏—Ç") or "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞"

    -- –§–æ—Ä–º–∏—Ä—É–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ–º –ø–æ —Ü–µ–Ω—Ç—Ä—É
    local title = "–ü—Ä–æ—Ü–µ—Å—Å : " .. packageName
    local centeredTitle = string.rep(" ", (30 - #title) / 2) .. title  -- –¶–µ–Ω—Ç—Ä–∏—Ä—É–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫

    -- –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ –ß–ß:–ú–ú –∏ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì
    local currentTime = os.date("%H:%M")
    local currentDate = os.date("%d.%m.%Y")
    
    -- –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É —Å –¥–∞—Ç–æ–π –∏ –≤—Ä–µ–º–µ–Ω–µ–º
    local dateTimeLine = string.rep(" ", (30 - #("–î·¥Ä·¥õ·¥Ä: " .. currentDate .. " –í·¥©·¥á ç—è : " .. currentTime)) / 2) .. "–î·¥Ä·¥õ·¥Ä: " .. currentDate .. " –í·¥©·¥á ç—è : " .. currentTime  -- –¶–µ–Ω—Ç—Ä–∏—Ä—É–µ–º –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è

    -- –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É —Å –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–æ–π
   
     gg.clearResults()  -- –û—á–∏—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    local main = gg.choice({        
        " üë® | –ü·¥á·¥©·¥Ñ·¥è–Ω·¥Ä–∂ | üë® ",
        " üöó | –ê ô·¥õ·¥è ç·¥è–±–∏·¥ß—å  | üöó", 
        " üëÅÔ∏è‚Äçüó®Ô∏è | –í–∏…ú—É·¥Ä·¥ß | üëÅÔ∏è‚Äçüó®Ô∏è",
        " üî´ | –û·¥©—É–∂–∏·¥á  | üî´",
        " üí´ | –¢·¥á·¥ß·¥á·¥®·¥è·¥©·¥õ·¥Ä—Ü–∏—è | üí´",
        " üíº | –ë·¥è·¥õ—ã –¥·¥ß—è ·¥©·¥Ä–±·¥è·¥õ | üíº", 
        " ‚õî | –í—ã—Ö·¥è–¥ | ‚õî", 
    }, nil, centeredTitle .. "\n" .. dateTimeLine .. "\n –í·¥á·¥©·¥Ñ–∏—è ·¥Ñ·¥ã·¥©–∏·¥®·¥õ·¥Ä: 1.56" )  -- –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫, –¥–∞—Ç—É/–≤—Ä–µ–º—è –∏ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É

    if main == 1 then persona() end
    if main == 2 then car() end
    if main == 3 then visual() end
    if main == 4 then gun() end
    if main == 5 then teleport() end
    if main == 6 then bots() end
    if main == 7 then exit() end
end
function bots() 

active = 0
main3239 = gg.choice({
         " –°·¥®–∏·¥Ñ·¥è·¥ã –±·¥è·¥õ·¥è ô ",
         " –¢·¥á·¥ß·¥á·¥®·¥è·¥©·¥õ –Ω–∞ —Ä–∞–±–æ—Ç—É",

                  }, nil, '')  

if main3239 == 1 then listbot() end
if main3239 == 2 then teleportr() end
end
function teleportr() 
local main12 = gg.choice({
        "  üì¶ –°·¥è·¥©·¥õ–∏·¥©·¥è ô·¥è—á–Ω—ã–π —Ü·¥á–Ω·¥õ·¥©",
        "  üßë‚Äçüåæ –§·¥á·¥© ç·¥Ä", 
        "  üè≠ –ó·¥Ä ô·¥è–¥ –¢ ô–∏·¥ã·¥Ñ", 
        "  ‚õèÔ∏è –ö·¥Ä ç–Ω·¥á·¥ß·¥è ç–Ω—è", 
    }, nil, " –í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ—á–∫—É")
    
    if main12 == 1 then sortir() end
    if main12 == 2 then ferma() end  
    if main12 == 3 then twix() end
    if main12 == 4 then kamen() end
    end
    function kamen() 
    gg.setRanges(gg.REGION_C_ALLOC)
gg.searchNumber("1039807637", gg.TYPE_DWORD)
local results = gg.getResults(101)
if #results == 0 then
  gg.alert("–ó–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
  return
end

local baseAddress = results[1].address

local offsetX = 0x80
local offsetY = 0x84
local offsetZ = 0x88

local addrX = baseAddress + offsetX
local addrY = baseAddress + offsetY
local addrZ = baseAddress + offsetZ

local coords = gg.getValues({
  {address = addrX, flags = gg.TYPE_FLOAT},
  {address = addrY, flags = gg.TYPE_FLOAT},
  {address = addrZ, flags = gg.TYPE_FLOAT}
})

gg.toast(string.format("–¢·¥á·¥ß·¥á·¥®·¥è·¥©·¥õ  ô—ã·¥®·¥è·¥ß–Ω—è·¥á·¥õ·¥Ñ—è..", coords[1].value, coords[2].value, coords[3].value))

-- –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–≤—ã—Ö –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç (—á–∏—Å–ª–∞–º–∏, –±–µ–∑ –∫–∞–≤—ã—á–µ–∫)
gg.setValues({
  {address = addrX, value =2053 , flags = gg.TYPE_FLOAT},
  {address = addrY, value =-696 , flags = gg.TYPE_FLOAT},
  {address = addrZ, value = 12.4, flags = gg.TYPE_FLOAT}
})

gg.toast("–¢·¥á·¥ß·¥á·¥®·¥è·¥©·¥õ  ô—ã·¥®·¥è·¥ß–Ω·¥á–Ω")
end
    function twix()
gg.setRanges(gg.REGION_C_ALLOC)
gg.searchNumber("1039807637", gg.TYPE_DWORD)
local results = gg.getResults(101)
if #results == 0 then
  gg.alert("–ó–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
  return
end

local baseAddress = results[1].address

local offsetX = 0x80
local offsetY = 0x84
local offsetZ = 0x88

local addrX = baseAddress + offsetX
local addrY = baseAddress + offsetY
local addrZ = baseAddress + offsetZ

local coords = gg.getValues({
  {address = addrX, flags = gg.TYPE_FLOAT},
  {address = addrY, flags = gg.TYPE_FLOAT},
  {address = addrZ, flags = gg.TYPE_FLOAT}
})

gg.toast(string.format("–¢·¥á·¥ß·¥á·¥®·¥è·¥©·¥õ  ô—ã·¥®·¥è·¥ß–Ω—è·¥á·¥õ·¥Ñ—è..", coords[1].value, coords[2].value, coords[3].value))

-- –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–≤—ã—Ö –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç (—á–∏—Å–ª–∞–º–∏, –±–µ–∑ –∫–∞–≤—ã—á–µ–∫)
gg.setValues({
  {address = addrX, value = 2263.51318359375, flags = gg.TYPE_FLOAT},
  {address = addrY, value = 2149.2109375, flags = gg.TYPE_FLOAT},
  {address = addrZ, value = 17 , flags = gg.TYPE_FLOAT}
})

gg.toast("–¢·¥á·¥ß·¥á·¥®·¥è·¥©·¥õ  ô—ã·¥®·¥è·¥ß–Ω·¥á–Ω")
end
function sortir()
gg.setRanges(gg.REGION_C_ALLOC)
gg.searchNumber("1039807637", gg.TYPE_DWORD)
local results = gg.getResults(101)
if #results == 0 then
  gg.alert("–ó–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
  return
end

local baseAddress = results[1].address

local offsetX = 0x80
local offsetY = 0x84
local offsetZ = 0x88

local addrX = baseAddress + offsetX
local addrY = baseAddress + offsetY
local addrZ = baseAddress + offsetZ

local coords = gg.getValues({
  {address = addrX, flags = gg.TYPE_FLOAT},
  {address = addrY, flags = gg.TYPE_FLOAT},
  {address = addrZ, flags = gg.TYPE_FLOAT}
})

gg.toast(string.format("–¢·¥á·¥ß·¥á·¥®·¥è·¥©·¥õ  ô—ã·¥®·¥è·¥ß–Ω—è·¥á·¥õ·¥Ñ—è..", coords[1].value, coords[2].value, coords[3].value))

-- –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–≤—ã—Ö –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç (—á–∏—Å–ª–∞–º–∏, –±–µ–∑ –∫–∞–≤—ã—á–µ–∫)
gg.setValues({
  {address = addrX, value =806.8454589843 , flags = gg.TYPE_FLOAT},
  {address = addrY, value =1353.84033203125 , flags = gg.TYPE_FLOAT},
  {address = addrZ, value = 15 , flags = gg.TYPE_FLOAT}
})

gg.toast("–¢·¥á·¥ß·¥á·¥®·¥è·¥©·¥õ  ô—ã·¥®·¥è·¥ß–Ω·¥á–Ω")
end
function ferma()
gg.setRanges(gg.REGION_C_ALLOC)
gg.searchNumber("1039807637", gg.TYPE_DWORD)
local results = gg.getResults(101)
if #results == 0 then
  gg.alert("–ó–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
  return
end

local baseAddress = results[1].address

local offsetX = 0x80
local offsetY = 0x84
local offsetZ = 0x88

local addrX = baseAddress + offsetX
local addrY = baseAddress + offsetY
local addrZ = baseAddress + offsetZ

local coords = gg.getValues({
  {address = addrX, flags = gg.TYPE_FLOAT},
  {address = addrY, flags = gg.TYPE_FLOAT},
  {address = addrZ, flags = gg.TYPE_FLOAT}
})

gg.toast(string.format("–¢·¥á·¥ß·¥á·¥®·¥è·¥©·¥õ  ô—ã·¥®·¥è·¥ß–Ω—è·¥á·¥õ·¥Ñ—è..", coords[1].value, coords[2].value, coords[3].value))

-- –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–≤—ã—Ö –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç (—á–∏—Å–ª–∞–º–∏, –±–µ–∑ –∫–∞–≤—ã—á–µ–∫)
gg.setValues({
  {address = addrX, value = 949.01531982422 , flags = gg.TYPE_FLOAT},
  {address = addrY, value = -916.6235351562, flags = gg.TYPE_FLOAT},
  {address = addrZ, value = 40 , flags = gg.TYPE_FLOAT}
})

gg.toast("–¢·¥á·¥ß·¥á·¥®·¥è·¥©·¥õ  ô—ã·¥®·¥è·¥ß–Ω·¥á–Ω")
end
function listbot()
gg.alert("‚ùó–î·¥ß—è –¥·¥Ä–Ω–Ω·¥è–π …∏—É–Ω·¥ã—Ü–∏–∏ –Ω·¥á·¥è–±—Ö·¥è–¥–∏ ç ·¥Ä ô·¥õ·¥è·¥ã·¥ß–∏·¥ã·¥á·¥© ‚ùó")
gg.sleep("200") 
active = 0
main32300 = gg.choice({
         " üßë‚Äçüåæ | –ë·¥è·¥õ –Ω·¥Ä …∏·¥á·¥© ç—É | üßë‚Äçüåæ ",
         " üè≠ | –ë·¥è·¥õ –Ω·¥Ä …ú·¥Ä ô·¥è–¥ –¢ ô–∏·¥ã·¥Ñ |  üè≠ ", 
         " üì¶ | –ë·¥è·¥õ –Ω·¥Ä ·¥Ñ·¥è·¥©·¥õ–∏·¥©·¥è ô·¥è—á–Ω—ã–π —Ü·¥á–Ω·¥õ·¥© | üì¶", 
         " ‚õèÔ∏è | –ë·¥è·¥õ –Ω·¥Ä ·¥ã·¥Ä ç–Ω·¥á·¥ß·¥è ç–Ω—é | ‚õèÔ∏è", 

                  }, nil, '')  
          if main32300 == 1 then fermabot() end
          if main32300 == 2 then twixbot() end
          if main32300 == 3 then sortirbot() end
          if main32300 == 4 then kamenbot() end
end
function kamenbot() 
gg.setVisible(false)
mark_coords = nil
pers_coords = nil
baseTeleportAddress = nil

local continueLoop = true -- –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ü–∏–∫–ª–æ–º
function ainCycle()
    -- –ü—Ä–æ–≤–µ—Ä–∫–∞, –æ—Ç–∫—Ä—ã—Ç–æ –ª–∏ –º–µ–Ω—é GG
    if gg.isVisible() then
        -- –°–ø—Ä–∞—à–∏–≤–∞–µ–º —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Ö–æ—á–µ—Ç –ª–∏ –æ–Ω –ø—Ä–µ—Ä–≤–∞—Ç—å —Ü–∏–∫–ª
        local answer = gg.choice({"–ü—Ä–µ—Ä–≤–∞—Ç—å —Ñ–∞—Ä–º", "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å"}, 1)
        if answer == 1 then
            gg.toast("–§–∞—Ä–º –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.")
            return -- –í—ã—Ö–æ–¥ –∏–∑ —Ä–µ–∫—É—Ä—Å–∏–∏, –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ü–∏–∫–ª–∞
        else
--–°–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é GG –∏ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ü–∏–∫–ª
        end
    end

    -- –í–µ—Å—å –≤–∞—à –∫–æ–¥ –∑–¥–µ—Å—å (—Ç–æ—Ç —á—Ç–æ –≤—ã –ø—Ä–∏—Å–ª–∞–ª–∏)

    gg.clearResults()
    gg.setVisible(false)

    -- –ü–æ–∏—Å–∫ –º–µ—Ç–∫–∏ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –µ—â—ë –Ω–µ –Ω–∞–π–¥–µ–Ω—ã
    if not mark_coords then
        gg.setRanges(gg.REGION_C_BSS)
        gg.searchNumber("1176256512", gg.TYPE_DWORD)
        local mark = gg.getResults(101)
        if #mark == 0 then
            gg.alert("–ß–µ–∫–ø–æ–∏–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return -- –ú–æ–∂–Ω–æ –∑–∞–≤–µ—Ä—à–∏—Ç—å –∏–ª–∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ –∂–µ–ª–∞–Ω–∏—é
        end

        mark_base = mark[1].address
        mark_coords = {
            {address = mark_base + 0x21EC, flags = gg.TYPE_FLOAT}, -- X
            {address = mark_base + 0x21F0, flags = gg.TYPE_FLOAT}, -- Y
            {address = mark_base + 0x21F4, flags = gg.TYPE_FLOAT}  -- Z
        }
    end

    -- –û–±–Ω–æ–≤–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –º–µ—Ç–∫–∏ –ø–µ—Ä–µ–¥ —Ç–µ–ª–µ–ø–æ—Ä—Ç–æ–º
    local current_mark = gg.getValues(mark_coords)

    -- –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ 0 0 0
    if current_mark[1].value == 0 and current_mark[2].value == 0 and current_mark[3].value == 0 then
        gg.alert("–í–∞–º –Ω—É–∂–Ω–æ –ø–æ—Å—Ç—É–ø–∏—Ç—å –Ω–∞ —Ä–∞–±–æ—Ç—É –¥–ª—è –±–æ—Ç–∞ !")
        return
    end

    -- –ü–æ–∏—Å–∫ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –ø–µ—Ä—Å–æ–Ω–∞–∂–∞, –µ—Å–ª–∏ –µ—â—ë –Ω–µ –Ω–∞–π–¥–µ–Ω–æ
    if not pers_coords then
        gg.clearResults()
        gg.setRanges( bit32.bor(gg.REGION_C_ALLOC,gg.REGION_OTHER) )
        gg.searchNumber("1039807637", gg.TYPE_DWORD)
        local pers = gg.getResults(111)
        if #pers == 0 then
            gg.alert("–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!")
            return
        end

        local pers_base = pers[1].address
        pers_coords = {
            {address = pers_base + 0x80, flags = gg.TYPE_FLOAT}, -- X
            {address = pers_base + 0x84, flags = gg.TYPE_FLOAT}, -- Y
            {address = pers_base + 0x88, flags = gg.TYPE_FLOAT}  -- Z
        }
    end

    -- –¢–µ–ª–µ–ø–æ—Ä—Ç –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –º–µ—Ç–∫–∏
    local success = gg.setValues({
        {address=pers_coords[1].address, value=current_mark[1].value, flags=gg.TYPE_FLOAT},
        {address=pers_coords[2].address, value=current_mark[2].value, flags=gg.TYPE_FLOAT},
        {address=pers_coords[3].address, value=current_mark[3].value, flags=gg.TYPE_FLOAT}
    })

    if success then
        gg.toast("–¢–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞")
    else
        gg.alert("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏–∏!")
    end

    function setCoords(x,y,z)
      if baseTeleportAddress == nil then 
          gg.clearResults()
          gg.setRanges( bit32.bor(gg.REGION_C_ALLOC,gg.REGION_OTHER) )
          gg.searchNumber("1039807637",gg.TYPE_DWORD)
          local r=gg.getResults(100)

          if #r==0 then 
              gg.alert("–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∞–¥—Ä–µ—Å —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞")
              return 
          end 

          baseTeleportAddress=r[1].address 
          gg.toast("–ê–¥—Ä–µ—Å —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞ –Ω–∞–π–¥–µ–Ω –∏ —Å–æ—Ö—Ä–∞–Ω—ë–Ω!") 
      else 
          gg.toast("–ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–π –∞–¥—Ä–µ—Å —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞.")
      end 

      local values={
          {address=baseTeleportAddress+0x80,flags=gg.TYPE_FLOAT,value=x},
          {address=baseTeleportAddress+0x84,flags=gg.TYPE_FLOAT,value=y},
          {address=baseTeleportAddress+0x88,flags=gg.TYPE_FLOAT,value=z}
      }

      local successSetValues=gg.setValues(values)

      if successSetValues then 
          gg.toast("–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
      else 
          print("–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç")
      end 
   end

   -- –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º –≤—ã–∑–æ–≤–æ–º —Ñ—É–Ω–∫—Ü–∏–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä 5 —Å–µ–∫—É–Ω–¥)
   gg.sleep(5000)

   -- –†–µ–∫—É—Ä—Å–∏–≤–Ω—ã–π –≤—ã–∑–æ–≤ –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ü–∏–∫–ª–∞ –±–µ–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è while/try/do-while.
   ainCycle()
end

-- –ó–∞–ø—É—Å–∫ –ø–µ—Ä–≤–æ–≥–æ –≤—ã–∑–æ–≤–∞ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ü–∏–∫–ª–∞.
ainCycle()

-- –ü–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ü–∏–∫–ª–∞ –º–æ–∂–Ω–æ –≤—ã–≤–µ—Å—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Ñ–∏–Ω–∞–ª—å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è.
gg.toast("–ë–æ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω.")
end
function fermabot() 
gg.setVisible(false)
mark_coords = nil
pers_coords = nil
baseTeleportAddress = nil

local continueLoop = true -- –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ü–∏–∫–ª–æ–º
function mainCycle()
    -- –ü—Ä–æ–≤–µ—Ä–∫–∞, –æ—Ç–∫—Ä—ã—Ç–æ –ª–∏ –º–µ–Ω—é GG
    if gg.isVisible() then
        -- –°–ø—Ä–∞—à–∏–≤–∞–µ–º —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Ö–æ—á–µ—Ç –ª–∏ –æ–Ω –ø—Ä–µ—Ä–≤–∞—Ç—å —Ü–∏–∫–ª
        local answer = gg.choice({"–ü—Ä–µ—Ä–≤–∞—Ç—å —Ñ–∞—Ä–º", "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å"}, 1)
        if answer == 1 then
            gg.toast("–§–∞—Ä–º –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.")
            return -- –í—ã—Ö–æ–¥ –∏–∑ —Ä–µ–∫—É—Ä—Å–∏–∏, –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ü–∏–∫–ª–∞
        else
--–°–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é GG –∏ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ü–∏–∫–ª
        end
    end

    -- –í–µ—Å—å –≤–∞—à –∫–æ–¥ –∑–¥–µ—Å—å (—Ç–æ—Ç —á—Ç–æ –≤—ã –ø—Ä–∏—Å–ª–∞–ª–∏)

    gg.clearResults()
    gg.setVisible(false)

    -- –ü–æ–∏—Å–∫ –º–µ—Ç–∫–∏ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –µ—â—ë –Ω–µ –Ω–∞–π–¥–µ–Ω—ã
    if not mark_coords then
        gg.setRanges(gg.REGION_C_BSS)
        gg.searchNumber("1176256512", gg.TYPE_DWORD)
        local mark = gg.getResults(101)
        if #mark == 0 then
            gg.alert("–ß–µ–∫–ø–æ–∏–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return -- –ú–æ–∂–Ω–æ –∑–∞–≤–µ—Ä—à–∏—Ç—å –∏–ª–∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ –∂–µ–ª–∞–Ω–∏—é
        end

        mark_base = mark[1].address
        mark_coords = {
            {address = mark_base + 0x21D0, flags = gg.TYPE_FLOAT}, -- X
            {address = mark_base + 0x21D4, flags = gg.TYPE_FLOAT}, -- Y
            {address = mark_base + 0x21D8, flags = gg.TYPE_FLOAT}  -- Z
        }
    end

    -- –û–±–Ω–æ–≤–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –º–µ—Ç–∫–∏ –ø–µ—Ä–µ–¥ —Ç–µ–ª–µ–ø–æ—Ä—Ç–æ–º
    local current_mark = gg.getValues(mark_coords)

    -- –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ 0 0 0
    if current_mark[1].value == 0 and current_mark[2].value == 0 and current_mark[3].value == 0 then
        gg.alert("–í–∞–º –Ω—É–∂–Ω–æ –ø–æ—Å—Ç—É–ø–∏—Ç—å –Ω–∞ —Ä–∞–±–æ—Ç—É –¥–ª—è –±–æ—Ç–∞ !")
        return
    end

    -- –ü–æ–∏—Å–∫ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –ø–µ—Ä—Å–æ–Ω–∞–∂–∞, –µ—Å–ª–∏ –µ—â—ë –Ω–µ –Ω–∞–π–¥–µ–Ω–æ
    if not pers_coords then
        gg.clearResults()
        gg.setRanges( bit32.bor(gg.REGION_C_ALLOC,gg.REGION_OTHER) )
        gg.searchNumber("1039807637", gg.TYPE_DWORD)
        local pers = gg.getResults(111)
        if #pers == 0 then
            gg.alert("–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!")
            return
        end

        local pers_base = pers[1].address
        pers_coords = {
            {address = pers_base + 0x80, flags = gg.TYPE_FLOAT}, -- X
            {address = pers_base + 0x84, flags = gg.TYPE_FLOAT}, -- Y
            {address = pers_base + 0x88, flags = gg.TYPE_FLOAT}  -- Z
        }
    end

    -- –¢–µ–ª–µ–ø–æ—Ä—Ç –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –º–µ—Ç–∫–∏
    local success = gg.setValues({
        {address=pers_coords[1].address, value=current_mark[1].value, flags=gg.TYPE_FLOAT},
        {address=pers_coords[2].address, value=current_mark[2].value, flags=gg.TYPE_FLOAT},
        {address=pers_coords[3].address, value=current_mark[3].value, flags=gg.TYPE_FLOAT}
    })

    if success then
        gg.toast("–¢–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞")
    else
        gg.alert("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏–∏!")
    end

    function setCoords(x,y,z)
      if baseTeleportAddress == nil then 
          gg.clearResults()
          gg.setRanges( bit32.bor(gg.REGION_C_ALLOC,gg.REGION_OTHER) )
          gg.searchNumber("1039807637",gg.TYPE_DWORD)
          local r=gg.getResults(100)

          if #r==0 then 
              gg.alert("–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∞–¥—Ä–µ—Å —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞")
              return 
          end 

          baseTeleportAddress=r[1].address 
          gg.toast("–ê–¥—Ä–µ—Å —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞ –Ω–∞–π–¥–µ–Ω –∏ —Å–æ—Ö—Ä–∞–Ω—ë–Ω!") 
      else 
          gg.toast("–ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–π –∞–¥—Ä–µ—Å —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞.")
      end 

      local values={
          {address=baseTeleportAddress+0x80,flags=gg.TYPE_FLOAT,value=x},
          {address=baseTeleportAddress+0x84,flags=gg.TYPE_FLOAT,value=y},
          {address=baseTeleportAddress+0x88,flags=gg.TYPE_FLOAT,value=z}
      }

      local successSetValues=gg.setValues(values)

      if successSetValues then 
          gg.toast("–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
      else 
          print("–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç")
      end 
   end

   -- –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º –≤—ã–∑–æ–≤–æ–º —Ñ—É–Ω–∫—Ü–∏–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä 5 —Å–µ–∫—É–Ω–¥)
   gg.sleep(1800)

   -- –†–µ–∫—É—Ä—Å–∏–≤–Ω—ã–π –≤—ã–∑–æ–≤ –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ü–∏–∫–ª–∞ –±–µ–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è while/try/do-while.
   mainCycle()
end

-- –ó–∞–ø—É—Å–∫ –ø–µ—Ä–≤–æ–≥–æ –≤—ã–∑–æ–≤–∞ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ü–∏–∫–ª–∞.
mainCycle()

-- –ü–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ü–∏–∫–ª–∞ –º–æ–∂–Ω–æ –≤—ã–≤–µ—Å—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Ñ–∏–Ω–∞–ª—å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è.
gg.toast("–ë–æ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω.")
end
function twixbot() 
gg.setVisible(false)
mark_coords = nil
pers_coords = nil
baseTeleportAddress = nil

local continueLoop = true -- –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ü–∏–∫–ª–æ–º
function mainCyc()
    -- –ü—Ä–æ–≤–µ—Ä–∫–∞, –æ—Ç–∫—Ä—ã—Ç–æ –ª–∏ –º–µ–Ω—é GG
    if gg.isVisible() then
        -- –°–ø—Ä–∞—à–∏–≤–∞–µ–º —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Ö–æ—á–µ—Ç –ª–∏ –æ–Ω –ø—Ä–µ—Ä–≤–∞—Ç—å —Ü–∏–∫–ª
        local answer = gg.choice({"–ü—Ä–µ—Ä–≤–∞—Ç—å —Ñ–∞—Ä–º", "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å"}, 1)
        if answer == 1 then
            gg.toast("–§–∞—Ä–º –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.")
            return -- –í—ã—Ö–æ–¥ –∏–∑ —Ä–µ–∫—É—Ä—Å–∏–∏, –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ü–∏–∫–ª–∞
        else
--–°–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é GG –∏ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ü–∏–∫–ª
        end
    end

    -- –í–µ—Å—å –≤–∞—à –∫–æ–¥ –∑–¥–µ—Å—å (—Ç–æ—Ç —á—Ç–æ –≤—ã –ø—Ä–∏—Å–ª–∞–ª–∏)

    gg.clearResults()
    gg.setVisible(false)

    -- –ü–æ–∏—Å–∫ –º–µ—Ç–∫–∏ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –µ—â—ë –Ω–µ –Ω–∞–π–¥–µ–Ω—ã
    if not mark_coords then
        gg.setRanges(gg.REGION_C_BSS)
        gg.searchNumber("1176256512", gg.TYPE_DWORD)
        local mark = gg.getResults(101)
        if #mark == 0 then
            gg.alert("–ß–µ–∫–ø–æ–∏–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return -- –ú–æ–∂–Ω–æ –∑–∞–≤–µ—Ä—à–∏—Ç—å –∏–ª–∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ –∂–µ–ª–∞–Ω–∏—é
        end

        mark_base = mark[1].address
        mark_coords = {
            {address = mark_base + 0x21D0, flags = gg.TYPE_FLOAT}, -- X
            {address = mark_base + 0x21D4, flags = gg.TYPE_FLOAT}, -- Y
            {address = mark_base + 0x21D8, flags = gg.TYPE_FLOAT}  -- Z
        }
    end

    -- –û–±–Ω–æ–≤–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –º–µ—Ç–∫–∏ –ø–µ—Ä–µ–¥ —Ç–µ–ª–µ–ø–æ—Ä—Ç–æ–º
    local current_mark = gg.getValues(mark_coords)

    -- –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ 0 0 0
    if current_mark[1].value == 0 and current_mark[2].value == 0 and current_mark[3].value == 0 then
        gg.alert("–í–∞–º –Ω—É–∂–Ω–æ –ø–æ—Å—Ç—É–ø–∏—Ç—å –Ω–∞ —Ä–∞–±–æ—Ç—É –¥–ª—è –±–æ—Ç–∞ !")
        return
    end

    -- –ü–æ–∏—Å–∫ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –ø–µ—Ä—Å–æ–Ω–∞–∂–∞, –µ—Å–ª–∏ –µ—â—ë –Ω–µ –Ω–∞–π–¥–µ–Ω–æ
    if not pers_coords then
        gg.clearResults()
        gg.setRanges( bit32.bor(gg.REGION_C_ALLOC,gg.REGION_OTHER) )
        gg.searchNumber("1039807637", gg.TYPE_DWORD)
        local pers = gg.getResults(111)
        if #pers == 0 then
            gg.alert("–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!")
            return
        end

        local pers_base = pers[1].address
        pers_coords = {
            {address = pers_base + 0x80, flags = gg.TYPE_FLOAT}, -- X
            {address = pers_base + 0x84, flags = gg.TYPE_FLOAT}, -- Y
            {address = pers_base + 0x88, flags = gg.TYPE_FLOAT}  -- Z
        }
    end

    -- –¢–µ–ª–µ–ø–æ—Ä—Ç –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –º–µ—Ç–∫–∏
    local success = gg.setValues({
        {address=pers_coords[1].address, value=current_mark[1].value, flags=gg.TYPE_FLOAT},
        {address=pers_coords[2].address, value=current_mark[2].value, flags=gg.TYPE_FLOAT},
        {address=pers_coords[3].address, value=current_mark[3].value, flags=gg.TYPE_FLOAT}
    })

    if success then
        gg.toast("–¢–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞")
    else
        gg.alert("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏–∏!")
    end

    function setCoords(x,y,z)
      if baseTeleportAddress == nil then 
          gg.clearResults()
          gg.setRanges( bit32.bor(gg.REGION_C_ALLOC,gg.REGION_OTHER) )
          gg.searchNumber("1039807637",gg.TYPE_DWORD)
          local r=gg.getResults(100)

          if #r==0 then 
              gg.alert("–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∞–¥—Ä–µ—Å —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞")
              return 
          end 

          baseTeleportAddress=r[1].address 
          gg.toast("–ê–¥—Ä–µ—Å —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞ –Ω–∞–π–¥–µ–Ω –∏ —Å–æ—Ö—Ä–∞–Ω—ë–Ω!") 
      else 
          gg.toast("–ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–π –∞–¥—Ä–µ—Å —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞.")
      end 

      local values={
          {address=baseTeleportAddress+0x80,flags=gg.TYPE_FLOAT,value=x},
          {address=baseTeleportAddress+0x84,flags=gg.TYPE_FLOAT,value=y},
          {address=baseTeleportAddress+0x88,flags=gg.TYPE_FLOAT,value=z}
      }

      local successSetValues=gg.setValues(values)

      if successSetValues then 
          gg.toast("–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
      else 
          print("–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç")
      end 
   end

   -- –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º –≤—ã–∑–æ–≤–æ–º —Ñ—É–Ω–∫—Ü–∏–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä 5 —Å–µ–∫—É–Ω–¥)
   gg.sleep(3000)

   -- –†–µ–∫—É—Ä—Å–∏–≤–Ω—ã–π –≤—ã–∑–æ–≤ –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ü–∏–∫–ª–∞ –±–µ–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è while/try/do-while.
   mainCyc()
end

-- –ó–∞–ø—É—Å–∫ –ø–µ—Ä–≤–æ–≥–æ –≤—ã–∑–æ–≤–∞ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ü–∏–∫–ª–∞.
mainCyc()

-- –ü–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ü–∏–∫–ª–∞ –º–æ–∂–Ω–æ –≤—ã–≤–µ—Å—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Ñ–∏–Ω–∞–ª—å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è.
gg.toast("–ë–æ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω.")
end
function sortirbot() 
gg.setVisible(false)
mark_coords = nil
pers_coords = nil
baseTeleportAddress = nil

local continueLoop = true -- –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ü–∏–∫–ª–æ–º
function mainCycl()
    -- –ü—Ä–æ–≤–µ—Ä–∫–∞, –æ—Ç–∫—Ä—ã—Ç–æ –ª–∏ –º–µ–Ω—é GG
    if gg.isVisible() then
        -- –°–ø—Ä–∞—à–∏–≤–∞–µ–º —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Ö–æ—á–µ—Ç –ª–∏ –æ–Ω –ø—Ä–µ—Ä–≤–∞—Ç—å —Ü–∏–∫–ª
        local answer = gg.choice({"–ü—Ä–µ—Ä–≤–∞—Ç—å —Ñ–∞—Ä–º", "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å"}, 1)
        if answer == 1 then
            gg.toast("–§–∞—Ä–º –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.")
            return -- –í—ã—Ö–æ–¥ –∏–∑ —Ä–µ–∫—É—Ä—Å–∏–∏, –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ü–∏–∫–ª–∞
        else
--–°–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é GG –∏ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ü–∏–∫–ª
        end
    end

    -- –í–µ—Å—å –≤–∞—à –∫–æ–¥ –∑–¥–µ—Å—å (—Ç–æ—Ç —á—Ç–æ –≤—ã –ø—Ä–∏—Å–ª–∞–ª–∏)

    gg.clearResults()
    gg.setVisible(false)

    -- –ü–æ–∏—Å–∫ –º–µ—Ç–∫–∏ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –µ—â—ë –Ω–µ –Ω–∞–π–¥–µ–Ω—ã
    if not mark_coords then
        gg.setRanges(gg.REGION_C_BSS)
        gg.searchNumber("1176256512", gg.TYPE_DWORD)
        local mark = gg.getResults(101)
        if #mark == 0 then
            gg.alert("–ß–µ–∫–ø–æ–∏–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return -- –ú–æ–∂–Ω–æ –∑–∞–≤–µ—Ä—à–∏—Ç—å –∏–ª–∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ –∂–µ–ª–∞–Ω–∏—é
        end

        mark_base = mark[1].address
        mark_coords = {
            {address = mark_base + 0x21D0, flags = gg.TYPE_FLOAT}, -- X
            {address = mark_base + 0x21D4, flags = gg.TYPE_FLOAT}, -- Y
            {address = mark_base + 0x21D8, flags = gg.TYPE_FLOAT}  -- Z
        }
    end

    -- –û–±–Ω–æ–≤–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –º–µ—Ç–∫–∏ –ø–µ—Ä–µ–¥ —Ç–µ–ª–µ–ø–æ—Ä—Ç–æ–º
    local current_mark = gg.getValues(mark_coords)

    -- –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ 0 0 0
    if current_mark[1].value == 0 and current_mark[2].value == 0 and current_mark[3].value == 0 then
        gg.alert("–í–∞–º –Ω—É–∂–Ω–æ –ø–æ—Å—Ç—É–ø–∏—Ç—å –Ω–∞ —Ä–∞–±–æ—Ç—É –¥–ª—è –±–æ—Ç–∞ !")
        return
    end

    -- –ü–æ–∏—Å–∫ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –ø–µ—Ä—Å–æ–Ω–∞–∂–∞, –µ—Å–ª–∏ –µ—â—ë –Ω–µ –Ω–∞–π–¥–µ–Ω–æ
    if not pers_coords then
        gg.clearResults()
        gg.setRanges( bit32.bor(gg.REGION_C_ALLOC,gg.REGION_OTHER) )
        gg.searchNumber("1039807637", gg.TYPE_DWORD)
        local pers = gg.getResults(111)
        if #pers == 0 then
            gg.alert("–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!")
            return
        end

        local pers_base = pers[1].address
        pers_coords = {
            {address = pers_base + 0x80, flags = gg.TYPE_FLOAT}, -- X
            {address = pers_base + 0x84, flags = gg.TYPE_FLOAT}, -- Y
            {address = pers_base + 0x88, flags = gg.TYPE_FLOAT}  -- Z
        }
    end

    -- –¢–µ–ª–µ–ø–æ—Ä—Ç –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –º–µ—Ç–∫–∏
    local success = gg.setValues({
        {address=pers_coords[1].address, value=current_mark[1].value, flags=gg.TYPE_FLOAT},
        {address=pers_coords[2].address, value=current_mark[2].value, flags=gg.TYPE_FLOAT},
        {address=pers_coords[3].address, value=current_mark[3].value, flags=gg.TYPE_FLOAT}
    })

    if success then
        gg.toast("–¢–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞")
    else
        gg.alert("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏–∏!")
    end

    function setCoords(x,y,z)
      if baseTeleportAddress == nil then 
          gg.clearResults()
          gg.setRanges( bit32.bor(gg.REGION_C_ALLOC,gg.REGION_OTHER) )
          gg.searchNumber("1039807637",gg.TYPE_DWORD)
          local r=gg.getResults(100)

          if #r==0 then 
              gg.alert("–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∞–¥—Ä–µ—Å —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞")
              return 
          end 

          baseTeleportAddress=r[1].address 
          gg.toast("–ê–¥—Ä–µ—Å —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞ –Ω–∞–π–¥–µ–Ω –∏ —Å–æ—Ö—Ä–∞–Ω—ë–Ω!") 
      else 
          gg.toast("–ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–π –∞–¥—Ä–µ—Å —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞.")
      end 

      local values={
          {address=baseTeleportAddress+0x80,flags=gg.TYPE_FLOAT,value=x},
          {address=baseTeleportAddress+0x84,flags=gg.TYPE_FLOAT,value=y},
          {address=baseTeleportAddress+0x88,flags=gg.TYPE_FLOAT,value=z}
      }

      local successSetValues=gg.setValues(values)

      if successSetValues then 
          gg.toast("–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
      else 
          print("–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç")
      end 
   end

   -- –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º –≤—ã–∑–æ–≤–æ–º —Ñ—É–Ω–∫—Ü–∏–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä 5 —Å–µ–∫—É–Ω–¥)
   gg.sleep(1800)

   -- –†–µ–∫—É—Ä—Å–∏–≤–Ω—ã–π –≤—ã–∑–æ–≤ –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ü–∏–∫–ª–∞ –±–µ–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è while/try/do-while.
   mainCycl() 
  
end

-- –ó–∞–ø—É—Å–∫ –ø–µ—Ä–≤–æ–≥–æ –≤—ã–∑–æ–≤–∞ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ü–∏–∫–ª–∞.
mainCycl() 
end 
function teleport()
active = 0
main323 = gg.choice({

         " –¢·¥á·¥ß·¥á·¥®·¥è·¥©·¥õ ·¥®·¥è  ç·¥á·¥õ·¥ã·¥á ",
         " –¢·¥á·¥ß·¥á·¥®·¥è·¥©·¥õ ·¥®·¥è ·¥ã·¥è·¥è·¥©–¥–∏–Ω·¥Ä·¥õ·¥Ä ç ",

                  }, nil, '')  
          if main323 == 1 then metka() end
          if main323 == 2 then coordinats() end
          end
          function metka()
          active = 0
main3232 = gg.choice({
         " –¢·¥á·¥ß·¥á·¥®·¥è·¥©·¥õ–∏·¥©·¥è–≤·¥Ä·¥õ—å—Å—è",
         " –í·¥á·¥©–Ω—É·¥õ—å·¥Ñ—è –Ω·¥Ä –ó·¥á ç·¥ß—é(·¥á·¥Ñ·¥ß–∏  ô—ã ·¥®·¥è–¥ ·¥ã·¥Ä·¥©·¥õ·¥è–π)  ",

                  }, nil, '')  
          if main3232 == 1 then metkatp() end
          if main3232 == 2 then backnapol() end
          end
          function backnapol() 
          modifyCharacterPosition(110.0)
    
         end
          function metkatp()
          
-- –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç
-- –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç
mark_coords = nil
pers_coords = nil
baseTeleportAddress = nil

    gg.clearResults()
    gg.setVisible(false)

    -- –ü–æ–∏—Å–∫ –º–µ—Ç–∫–∏ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –µ—â—ë –Ω–µ –Ω–∞–π–¥–µ–Ω—ã
    if not mark_coords then
        gg.setRanges(gg.REGION_C_BSS)
        gg.searchNumber("1180457", gg.TYPE_DWORD)
        local mark = gg.getResults(1)
        if #mark == 0 then
            gg.alert("–ú–µ—Ç–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
            return
        end

        mark_base = mark[1].address
        mark_coords = {
            {address = mark_base - 0x20, flags = gg.TYPE_FLOAT}, -- X
            {address = mark_base - 0x1C, flags = gg.TYPE_FLOAT}-- Y
        }
    end

    -- –û–±–Ω–æ–≤–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –º–µ—Ç–∫–∏ –ø–µ—Ä–µ–¥ —Ç–µ–ª–µ–ø–æ—Ä—Ç–æ–º
    local current_mark = gg.getValues(mark_coords)

    -- –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ 0 0 0
    if current_mark[1].value == 0 and current_mark[2].value == 0 and current_mark[3].value == 0 then
        gg.alert("–í–∞–º –Ω—É–∂–Ω–æ –ø–æ—Å—Ç–∞–≤–∏—Ç—å –º–µ—Ç–∫—É –¥–ª—è —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏–∏!")
        return
    end

    -- –ü–æ–∏—Å–∫ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –ø–µ—Ä—Å–æ–Ω–∞–∂–∞, –µ—Å–ª–∏ –µ—â—ë –Ω–µ –Ω–∞–π–¥–µ–Ω–æ
    if not pers_coords then
        gg.clearResults()
        gg.setRanges(gg.REGION_C_ALLOC)
        gg.searchNumber("1039807637", gg.TYPE_DWORD)
        local pers = gg.getResults(1)
        if #pers == 0 then
            gg.alert("–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!")
            return
        end

        local pers_base = pers[1].address
        pers_coords = {
            {address = pers_base + 0x80, flags = gg.TYPE_FLOAT}, -- X
            {address = pers_base + 0x84, flags = gg.TYPE_FLOAT} -- Y
        }
    end

    -- –¢–µ–ª–µ–ø–æ—Ä—Ç –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –º–µ—Ç–∫–∏
    local success = gg.setValues({
        {address = pers_coords[1].address, value = current_mark[1].value, flags = gg.TYPE_FLOAT},
        {address = pers_coords[2].address, value = current_mark[2].value, flags = gg.TYPE_FLOAT}
    })

    if success then
        gg.toast("–¢·¥á·¥ß·¥á·¥®·¥è·¥©·¥õ  ô—ã·¥®·¥è·¥ß–Ω·¥á–Ω!")
    else
        gg.alert("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏–∏!")
    end

function setCoords(x, y, z)
    if baseTeleportAddress == nil then
        gg.clearResults()
        gg.setRanges(gg.REGION_C_ALLOC)
        gg.searchNumber("1039807637", gg.TYPE_DWORD)
        local r = gg.getResults(100)

        if #r == 0 then
            gg.alert("–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã! ‚ö†Ô∏è")
            return
        end

        baseTeleportAddress = r[1].address
        gg.toast("–ê–¥—Ä–µ—Å —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞ –Ω–∞–π–¥–µ–Ω –∏ —Å–æ—Ö—Ä–∞–Ω—ë–Ω!")
    else 
        gg.toast("–ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–π –∞–¥—Ä–µ—Å —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞.")
    end

    -- –ü—Ä–∏–º–µ–Ω—è–µ–º —Å–º–µ—â–µ–Ω–∏–µ –∫–æ –≤—Å–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º —Å –Ω–æ–≤—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ x,y,z.
    local values = {
      {address=baseTeleportAddress + 0x80, flags=gg.TYPE_FLOAT,value=x},
      {address=baseTeleportAddress + 0x84, flags=gg.TYPE_FLOAT,value=y}
   }

   local successSetValues=gg.setValues(values)

   if successSetValues then 
       gg.toast("–¢·¥á·¥ß·¥á·¥®·¥è·¥©·¥õ  ô—ã·¥®·¥è·¥ß–Ω·¥á–Ω! ‚ú®")
   else 
       print("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –∑–Ω–∞—á–µ–Ω–∏–π.")
   end 
end

          end
          function coordinats()
          -- –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–∏–∞–ø–∞–∑–æ–Ω –ø–æ–∏—Å–∫–∞
    local target_value = 1039807637  -- –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –Ω—É–∂–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ

    -- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –∑–Ω–∞—á–µ–Ω–∏—è
    function find_value(value)
        gg.setRanges(gg.REGION_C_ALLOC)  -- –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–∏–∞–ø–∞–∑–æ–Ω –ø–æ–∏—Å–∫–∞
        gg.searchNumber(value, gg.TYPE_DWORD)  -- –ò—â–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –∫–∞–∫ DWORD
        return gg.getResults(gg.getResultsCount())  -- –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞
    end

    -- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏–π –ø–æ —Å–º–µ—â–µ–Ω–∏—è–º
    function modify_values(found_results)
    -- –°–º–µ—â–µ–Ω–∏—è –¥–ª—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç (–≤ –±–∞–π—Ç–∞—Ö), –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è —Å–º–µ—â–µ–Ω–∏—è –≤–≤–µ—Ä—Ö
    local offsets = {
        x = 0x80,
        y = 0x84,
        z = 0x88
    }

    for i, result in ipairs(found_results) do
        local base_address = result.address
        
        -- –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã X
        local new_x_value = gg.prompt({"–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è X:"}, {0})
        if new_x_value and new_x_value[1] then  -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ nil –∏ –Ω–∞–ª–∏—á–∏–µ –ø–µ—Ä–≤–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
            local x_address = base_address + offsets.x
            gg.setValues({{address=x_address, flags=gg.TYPE_FLOAT, value=new_x_value[1]}})
            gg.alert("–ó–Ω–∞—á–µ–Ω–∏–µ X –∏–∑–º–µ–Ω–µ–Ω–æ" )
        end
        
        -- –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã Y
        local new_y_value = gg.prompt({"–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è Y:"}, {0})
        if new_y_value and new_y_value[1] then  -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ nil –∏ –Ω–∞–ª–∏—á–∏–µ –ø–µ—Ä–≤–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
            local y_address = base_address + offsets.y
            gg.setValues({{address=y_address, flags=gg.TYPE_FLOAT, value=new_y_value[1]}})
            gg.alert("–ó–Ω–∞—á–µ–Ω–∏–µ Y –∏–∑–º–µ–Ω–µ–Ω–æ" )
        end
        
        -- –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã Z
        local new_z_value = gg.prompt({"–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è Z:"}, {0})
        if new_z_value and new_z_value[1] then  -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ nil –∏ –Ω–∞–ª–∏—á–∏–µ –ø–µ—Ä–≤–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
            local z_address = base_address + offsets.z
            gg.setValues({{address=z_address, flags=gg.TYPE_FLOAT, value=new_z_value[1]}})
            gg.alert("–ó–Ω–∞—á–µ–Ω–∏–µ Z –∏–∑–º–µ–Ω–µ–Ω–æ" )
        end
        
        break  -- –£–¥–∞–ª–∏—Ç–µ —ç—Ç—É —Å—Ç—Ä–æ–∫—É, –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –≤—Å–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –∞–¥—Ä–µ—Å–∞.
    end
end

    -- –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞
    local found_results = find_value(target_value)

    if #found_results > 0 then
        gg.alert("–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –Ω–∞–π–¥–µ–Ω—ã! ")
        modify_values(found_results)  -- –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∏–∑–º–µ–Ω–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏–π
    else
        gg.toast("–ó–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
    end

     
     end
          function mesta()
gg.alert("–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ")
end
-- –ó–∞–ø—É—Å–∫ –º–µ–Ω—é
function persona()
gg.clearResults() 
active = 0
main1 = gg.choice({
         "üíØ | –ë·¥á·¥Ñ·¥Ñ ç·¥á·¥©·¥õ–∏·¥á | üíØ", 
         "‚ö∞Ô∏è | –°—É–∏—Ü–∏–¥ | ‚ö∞Ô∏è", 
         "üõ° | –í—ã–¥·¥Ä—á·¥Ä –±·¥©·¥è–Ω–∏ | üõ°", 
         "üèÉ‚Äç‚ôÇÔ∏è | –ë—ã·¥Ñ·¥õ·¥©—ã–π –±·¥á·¥¶ | üèÉ‚Äç‚ôÇÔ∏è",
         "‚Ü©Ô∏è | –†·¥á…ú·¥ã–∏·¥á ·¥®·¥è ô·¥è·¥©·¥è·¥õ—ã | ‚Ü©Ô∏è",
         "ü¶∏‚Äç‚ôÇÔ∏è | –í—ã·¥Ñ·¥è·¥ã–∏–π ·¥®·¥©—ã–∂·¥è·¥ã | ü¶∏‚Äç‚ôÇÔ∏è", 
         "ü¶∏‚Äç‚ôÄÔ∏è | –î·¥ß–∏–Ω–Ω—ã–π ·¥®·¥©—ã–∂·¥è·¥ã | ü¶∏‚Äç‚ôÄÔ∏è", 
         "üîõ | –° ç·¥á—â·¥á–Ω–∏·¥á ·¥®·¥è ·¥è·¥Ñ—è ç X/Y | üîõ",
         "‚¨ÜÔ∏è | –ü·¥è–¥–±·¥©·¥è·¥Ñ–∏·¥õ—å  ô ô·¥á·¥©—Ö | ‚¨ÜÔ∏è",
         "‚¨áÔ∏è | –ü·¥è–¥–±·¥©·¥è·¥Ñ–∏·¥õ—å  ô–Ω–∏…ú | ‚¨áÔ∏è", 
         }, nil, '') 
         if main1 == 1 then immortality() end
         if main1 == 2 then suicide() end
         if main1 == 3 then armour() end
         if main1 == 4 then fastbeg() end
         if main1 == 5 then stamina() end
         if main1 == 6 then povor() end
         if main1 == 7 then bigjump() end
         if main1 == 8 then longjump() end
         if main1 == 9 then xy() end
         if main1 == 10 then slapup() end
         if main1 == 11 then slapdown() end
         end
         function immortality() 
         active = 0
main3 = gg.choice({
         " ‚úÖ | –í·¥ã·¥ß—é—á–∏·¥õ—å ",
         " ‚ùå | –í—ã·¥ã·¥ß—é—á–∏·¥õ—å ", 
                  }, nil, '')  
          if main3 == 1 then on() end
          if main3 == 2 then off() end
          end
          function on() 
         local searchValue = 100.14399719238 -- –ó–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –ø–æ–∏—Å–∫–∞ –±–µ—Å—Å–º–µ—Ä—Ç–∏—è.
    local offset = 4 -- –°–º–µ—â–µ–Ω–∏–µ.
    local freezeValue = 5000 -- –ó–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –∑–∞–º–æ—Ä–æ–∑–∫–∏.

    gg.setRanges(gg.REGION_C_ALLOC)
    gg.searchNumber(searchValue, gg.TYPE_FLOAT)

    local results = gg.getResults(gg.getResultsCount())

    if #results == 0 then
        gg.toast("–ó–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
        return
    end

    for i = 1, #results do
        local address = results[i].address - offset
        
        gg.setValues({
            {
                address = address,
                flags=gg.TYPE_FLOAT,
                value=freezeValue,
            }
         })

         gg.addListItems({
             {
                 address=address,
                 flags=gg.TYPE_FLOAT,
                 value=freezeValue,
                 freeze=true -- –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –∑–∞–º–æ—Ä–æ–∑–∫–∏.
             }
         })
     end

     gg.toast("–ë–µ—Å—Å–º–µ—Ä—Ç–∏–µ –≤–∫–ª—é—á–µ–Ω–æ")
end
function off() 
local searchValue = 100.14399719238 -- –ó–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –ø–æ–∏—Å–∫–∞ –±–µ—Å—Å–º–µ—Ä—Ç–∏—è.
local offset = 4 -- –°–º–µ—â–µ–Ω–∏–µ.
local newValue = 100 -- –ù–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –∑–∞–º–µ–Ω—ã.

gg.setRanges(gg.REGION_C_ALLOC)
gg.searchNumber(searchValue, gg.TYPE_FLOAT)

local results = gg.getResults(gg.getResultsCount())

if #results == 0 then
    gg.toast("–ó–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
    return
end

for i = 1, #results do
    local address = results[i].address - offset
    
    -- –£–¥–∞–ª—è–µ–º –∑–∞–º–æ—Ä–æ–∑–∫—É —Å –∞–¥—Ä–µ—Å–∞
    gg.removeListItems({
        {
            address=address,
            flags=gg.TYPE_FLOAT,
        }
    })

    -- –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
    gg.setValues({
        {
            address=address,
            flags=gg.TYPE_FLOAT,
            value=newValue,
        }
    })
end

gg.toast("–ë–µ—Å—Å–º–µ—Ä—Ç–∏–µ –æ—Ç–∫–ª—é—á–µ–Ω–æ ") 
end
function suicide() 
    gg.clearResults()
    local searchValue = 100.14399719238 -- –ó–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –ø–æ–∏—Å–∫–∞.
    local offset = 4 

    function changeValue()
       gg.setRanges(gg.REGION_C_ALLOC)
       gg.searchNumber(searchValue, gg.TYPE_FLOAT)

       local results=gg.getResults(gg.getResultsCount())

       if #results == 0 then return end 

       for i=1,#results do 
           local address=results[i].address-offset 

           gg.setValues({
               {
                   address=address,
                   flags=gg.TYPE_FLOAT,
                   value=0.0,
               }
           })
       end 

       gg.toast("–°—É–∏—Ü–∏–¥ –±—ã–ª –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω")
   end 

   changeValue()
end 
function armour() 
 gg.clearResults()
   local searchValue=100.14399719238     
   local offset=4 

   function changeValue()
       gg.setRanges(gg.REGION_C_ALLOC)
       gg.searchNumber(searchValue,gg.TYPE_FLOAT)

       local results=gg.getResults(gg.getResultsCount())

       if #results==0 then return end 

       for i=1,#results do 
           local address=results[i].address+offset
            
           gg.setValues({
               {
                   address=address,
                   flags=gg.TYPE_FLOAT,
                   value=100,
               }
           })
       end 

       gg.toast("–£—Å–ø–µ—à–Ω–æ –≤—ã–¥–∞–Ω–∞ –±—Ä–æ–Ω—è")
   end
   
   changeValue()
end 
function fastbeg()
active = 0
main4 = gg.choice({
         " ‚úÖ | –í·¥ã·¥ß—é—á–∏·¥õ—å ",
         " ‚ùå | –í—ã·¥ã·¥ß—é—á–∏·¥õ—å ", 
                  }, nil, '')  
          if main4 == 1 then one() end
          if main4 == 2 then offe() end
          end
          function one() 
            local searchValue = 409099829248
    local offset = 0x20
    local freezeValue = -0.5

    gg.setRanges(gg.REGION_C_DATA)
    gg.searchNumber(searchValue, gg.TYPE_QWORD)

    local results = gg.getResults(1000)

    if #results == 0 then
        gg.toast("–ó–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
        return
    end

    for i = 1, #results do
        local address = results[i].address + offset
        
        gg.setValues({
            {
                address = address,
                flags = gg.TYPE_FLOAT,
                value = freezeValue,
            }
        })

        gg.addListItems({
            {
                address = address,
                flags = gg.TYPE_FLOAT,
                value = freezeValue,
                freeze=true -- –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –∑–∞–º–æ—Ä–æ–∑–∫–∏ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –±–µ–≥–∞.
            }
        })
    end

    gg.toast("–ë—ã—Å—Ç—Ä—ã–π –±–µ–≥ –≤–∫–ª—é—á–µ–Ω")
end
function offe() 
  local searchValue = 409099829248
    local offset = 0x20
    local freezeValue = 0.69

    gg.setRanges(gg.REGION_C_DATA)
    gg.searchNumber(searchValue, gg.TYPE_QWORD)

    local results = gg.getResults(1000)

    if #results == 0 then
        gg.toast("–ó–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
        return
    end

    for i = 1, #results do
        local address = results[i].address + offset
        
        gg.setValues({
            {
                address = address,
                flags = gg.TYPE_FLOAT,
                value = freezeValue,
            }
        })

        gg.addListItems({
            {
                address = address,
                flags = gg.TYPE_FLOAT,
                value = freezeValue,
                freeze=true -- –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –∑–∞–º–æ—Ä–æ–∑–∫–∏ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –±–µ–≥–∞.
            }
        })
    end

    gg.toast("–ë—ã—Å—Ç—Ä—ã–π –±–µ–≥ –≤—ã–∫–ª—é—á–µ–Ω")
end
function stamina() 
-- –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–º–æ—Ä–æ–∑–∏—Ç—å
local targetValue = 1150271488 -- –í–∞—à–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Å—Ç–∞–º–∏–Ω—ã
local offset = -0x34 -- –°–º–µ—â–µ–Ω–∏–µ –æ—Ç –Ω–∞–π–¥–µ–Ω–Ω–æ–≥–æ –∞–¥—Ä–µ—Å–∞

    gg.setRanges(gg.REGION_C_ALLOC)
-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –∏ –∑–∞–º–æ—Ä–æ–∑–∫–∏ –∑–Ω–∞—á–µ–Ω–∏—è —Å—Ç–∞–º–∏–Ω—ã
function freezeStamina()
    -- –ò—â–µ–º –∑–∞–¥–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –ø–∞–º—è—Ç–∏
    gg.searchNumber(targetValue, gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1)
    
    -- –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞
    local results = gg.getResults(1000)
    
    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞–π–¥–µ–Ω –ª–∏ –∞–¥—Ä–µ—Å
    if #results > 0 then
        -- –í—ã—á–∏—Å–ª—è–µ–º –∞–¥—Ä–µ—Å —Å—Ç–∞–º–∏–Ω—ã —Å —É—á–µ—Ç–æ–º —Å–º–µ—â–µ–Ω–∏—è
        local staminaAddress = results[1].address + offset
        
        -- –î–æ–±–∞–≤–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç –≤ —Å–ø–∏—Å–æ–∫ GameGuardian –¥–ª—è –∑–∞–º–æ—Ä–æ–∑–∫–∏ –∑–Ω–∞—á–µ–Ω–∏—è
        gg.addListItems({
            {
                address = staminaAddress,
                flags = gg.TYPE_FLOAT,
                value = 450.0,
                freeze = true -- –ó–∞–º–æ—Ä–∞–∂–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ
            }
        })
        
        gg.toast("–ë–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π –±–µ–≥ –≤–∫–ª—é—á—ë–Ω ") -- –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –∑–∞–º–æ—Ä–æ–∑–∫–µ
    else
        gg.toast("–ê–¥—Ä–µ—Å –Ω–µ –Ω–∞–π–¥–µ–Ω!") -- –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ –∞–¥—Ä–µ—Å –Ω–µ –Ω–∞–π–¥–µ–Ω
    end
end

-- –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∑–∞–º–æ—Ä–æ–∑–∫–∏ —Å—Ç–∞–º–∏–Ω—ã
freezeStamina()
end
function bigjump() 
    active = 0
    main8 = gg.choice({
        " ‚úÖ | –í·¥ã·¥ß—é—á–∏·¥õ—å ",
        " ‚ùå | –í—ã·¥ã·¥ß—é—á–∏·¥õ—å ", 
    }, nil, '')  
    if main8 == 1 then oaon() end
    if main8 == 2 then oaooff() end
end
function oaon() 
    local searchValue=1.65439337e-24 -- –ó–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –ø–æ–∏—Å–∫–∞.
   local replaceValue=10.0 -- –ù–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.
   local offset=0x88 -- –°–º–µ—â–µ–Ω–∏–µ.

   function replaceValueInAlloc()
      -- –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞.
      gg.setRanges(gg.REGION_C_ALLOC)
      
      -- –ò—â–µ–º –∑–∞–¥–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –æ–±–ª–∞—Å—Ç–∏ –ø–∞–º—è—Ç–∏ alloc.
      gg.searchNumber(searchValue,gg.TYPE_FLOAT)
      
      -- –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞.
      local results=gg.getResults(gg.getResultsCount())
      
      if #results==0 then return end
      
      for i,v in ipairs(results) do 
          -- –ü–æ–ª—É—á–∞–µ–º –∞–¥—Ä–µ—Å –Ω–∞–π–¥–µ–Ω–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è —Å —É—á–µ—Ç–æ–º —Å–º–µ—â–µ–Ω–∏—è.
          local address=v.address+offset
        
          -- –ó–∞–º–µ–Ω—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞ –Ω–æ–≤–æ–µ.
          gg.setValues({
              {address=address,flags=gg.TYPE_FLOAT,value=replaceValue}
          })
          
          -- –£–≤–µ–¥–æ–º–ª—è–µ–º –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –æ–ø–µ—Ä–∞—Ü–∏–∏.
          gg.toast("–í—ã—Å–æ–∫–∏–π –ø—Ä—ã–∂–æ–∫ –≤–∫–ª—é—á–µ–Ω") 
      end
      
      -- –£–≤–µ–¥–æ–º–ª—è–µ–º –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –æ–ø–µ—Ä–∞—Ü–∏–∏.
      gg.toast("–í—ã—Å–æ–∫–∏–π –ø—Ä—ã–∂–æ–∫ –≤–∫–ª—é—á–µ–Ω.")
  end
  
  replaceValueInAlloc()  
end
function oaooff() 
    local searchValue=1.65439337e-24 -- –ó–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –ø–æ–∏—Å–∫–∞.
   local replaceValue=70.0 -- –ù–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.
   local offset=0x88 -- –°–º–µ—â–µ–Ω–∏–µ.

   function replaceValueInOther()
      -- –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞.
      gg.setRanges(gg.REGION_C_ALLOC)
      
      -- –ò—â–µ–º –∑–∞–¥–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –æ–±–ª–∞—Å—Ç–∏ –ø–∞–º—è—Ç–∏ alloc.
      gg.searchNumber(searchValue,gg.TYPE_FLOAT)
      
      -- –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞.
      local results=gg.getResults(gg.getResultsCount())
      
      if #results==0 then return end
      
      for i,v in ipairs(results) do 
          -- –ü–æ–ª—É—á–∞–µ–º –∞–¥—Ä–µ—Å –Ω–∞–π–¥–µ–Ω–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è —Å —É—á–µ—Ç–æ–º —Å–º–µ—â–µ–Ω–∏—è.
          local address=v.address+offset
        
          -- –ó–∞–º–µ–Ω—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞ –Ω–æ–≤–æ–µ.
          gg.setValues({
              {address=address,flags=gg.TYPE_FLOAT,value=replaceValue}
          })
          
          -- –£–≤–µ–¥–æ–º–ª—è–µ–º –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –æ–ø–µ—Ä–∞—Ü–∏–∏.
          gg.toast("–í—ã—Å–æ–∫–∏–π –ø—Ä—ã–∂–æ–∫ –≤—ã–∫–ª—é—á–µ–Ω") 
      end
      
      -- –£–≤–µ–¥–æ–º–ª—è–µ–º –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –æ–ø–µ—Ä–∞—Ü–∏–∏.
      gg.toast("–í—ã—Å–æ–∫–∏–π –ø—Ä—ã–∂–æ–∫ –≤—ã–∫–ª—é—á–µ–Ω.")
  end
  
  replaceValueInOther()  
end

-- –û—Å—Ç–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏...
    function longjump() 
    active = 0
main8 = gg.choice({
         " ‚úÖ | –í·¥ã·¥ß—é—á–∏·¥õ—å ",
         " ‚ùå | –í—ã·¥ã·¥ß—é—á–∏·¥õ—å ", 
                  }, nil, '')  
          if main8 == 1 then ooon() end
          if main8 == 2 then oooff() end
          end
          function ooon() 
local searchValue=936480000.0-- –ó–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –ø–æ–∏—Å–∫–∞.
   local replaceValue=10-- –ù–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.
   local offset=0x18 -- –°–º–µ—â–µ–Ω–∏–µ.

   function replaceValueInAll()
      -- –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞.
      gg.setRanges(gg.REGION_CODE_APP)
      
      -- –ò—â–µ–º –∑–∞–¥–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –æ–±–ª–∞—Å—Ç–∏ –ø–∞–º—è—Ç–∏ alloc.
      gg.searchNumber(searchValue,gg.TYPE_FLOAT)
      
      -- –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞.
      local results=gg.getResults(gg.getResultsCount())
      
      if #results==0 then return end
      
      for i,v in ipairs(results) do 
          -- –ü–æ–ª—É—á–∞–µ–º –∞–¥—Ä–µ—Å –Ω–∞–π–¥–µ–Ω–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è —Å —É—á–µ—Ç–æ–º —Å–º–µ—â–µ–Ω–∏—è.
          local address=v.address+offset
        
          -- –ó–∞–º–µ–Ω—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞ –Ω–æ–≤–æ–µ.
          gg.setValues({
              {address=address,flags=gg.TYPE_FLOAT,value=replaceValue}
          })
          
          -- –£–≤–µ–¥–æ–º–ª—è–µ–º –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –æ–ø–µ—Ä–∞—Ü–∏–∏.
          gg.toast("–î–ª–∏–Ω–Ω—ã–π –ø—Ä—ã–∂–æ–∫ –≤–∫–ª—é—á–µ–Ω") 
      end
      
      -- –£–≤–µ–¥–æ–º–ª—è–µ–º –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –æ–ø–µ—Ä–∞—Ü–∏–∏.
      gg.toast("–î–ª–∏–Ω–Ω—ã–π –ø—Ä—ã–∂–æ–∫ –≤–∫–ª—é—á–µ–Ω.")
  end
  
  replaceValueInAll()  
end
    function oooff() 
        local searchValue=936480000.0-- –ó–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –ø–æ–∏—Å–∫–∞.
   local replaceValue=0.8-- –ù–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.
   local offset=0x18 -- –°–º–µ—â–µ–Ω–∏–µ.


   function replaceValueInAOll()
      -- –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞.
      gg.setRanges(gg.REGION_CODE_APP)
      
      -- –ò—â–µ–º –∑–∞–¥–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –æ–±–ª–∞—Å—Ç–∏ –ø–∞–º—è—Ç–∏ alloc.
      gg.searchNumber(searchValue,gg.TYPE_FLOAT)
      
      -- –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞.
      local results=gg.getResults(gg.getResultsCount())
      
      if #results==0 then return end
      
      for i,v in ipairs(results) do 
          -- –ü–æ–ª—É—á–∞–µ–º –∞–¥—Ä–µ—Å –Ω–∞–π–¥–µ–Ω–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è —Å —É—á–µ—Ç–æ–º —Å–º–µ—â–µ–Ω–∏—è.
          local address=v.address+offset
        
          -- –ó–∞–º–µ–Ω—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞ –Ω–æ–≤–æ–µ.
          gg.setValues({
              {address=address,flags=gg.TYPE_FLOAT,value=replaceValue}
          })
          
          -- –£–≤–µ–¥–æ–º–ª—è–µ–º –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –æ–ø–µ—Ä–∞—Ü–∏–∏.
          gg.toast("–î–ª–∏–Ω–Ω—ã–π –ø—Ä—ã–∂–æ–∫ –≤—ã–∫–ª—é—á–µ–Ω") 
      end
      
      -- –£–≤–µ–¥–æ–º–ª—è–µ–º –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –æ–ø–µ—Ä–∞—Ü–∏–∏.
      gg.toast("–î–ª–∏–Ω–Ω—ã–π –ø—Ä—ã–∂–æ–∫ –≤—ã–∫–ª—é—á–µ–Ω")
  end
  
  replaceValueInAOll()  
end
    function slapup()
   modifyCharacterPosition(10.0)
end 

function slapdown()
   modifyCharacterPosition(-10.0)
end 

function modifyCharacterPosition(addValue)
   local searchValue=-1083007583 
   local offset=0x2A4

   function changeValue()
       gg.setRanges(gg.REGION_C_ALLOC)
       gg.searchNumber(searchValue,gg.TYPE_DWORD)

       local results=gg.getResults(gg.getResultsCount())

       if #results==0 then return end 

       for i=1,#results do 
           local address=results[i].address+offset
            
           local currentValue=gg.getValues({
               {
                   address=address,
                   flags=gg.TYPE_FLOAT,
               }
           })[1].value 

           local newValue=currentValue+addValue 

           gg.setValues({
               {
                   address=address,
                   flags=gg.TYPE_FLOAT,
                   value=newValue,
               }
           })
       end 

       if addValue>0 then 
           gg.toast ("–í—ã –±—ã–ª–∏ –ø–æ–¥–∫–∏–Ω—É—Ç—ã") 
       else 
           gg.toast ("–í—ã –±—ã–ª–∏ –æ–ø—É—â–µ–Ω—ã") 
       end  
   end

   changeValue()
end
function car() 
gg.clearResults() 
active = 0
main10 = gg.choice({
         "üß± | –ë·¥á·¥Ñ·¥Ñ ç·¥á·¥©·¥õ–∏·¥á ·¥Ä ô·¥õ·¥è ç·¥è–±–∏·¥ß—è | üß±", 
         "üóë | –°·¥ß·¥è ç·¥Ä·¥õ—å  ç·¥Ä…Ø–∏–Ω—É | üóë", 
         "üíØ | –í—ã–¥·¥Ä·¥õ—å …ú–¥·¥è·¥©·¥è ô—å·¥á ·¥Ä ô·¥õ·¥è ç·¥è–±–∏·¥ß—é | üíØ", 
         "‚¨ÜÔ∏è | –ü·¥è–¥·¥ã–∏–Ω—É·¥õ—å  ç·¥Ä…Ø–∏–Ω—É  ô ô·¥á·¥©—Ö | ‚¨ÜÔ∏è", 
         "‚¨áÔ∏è | –ü·¥è–¥·¥ã–∏–Ω—É·¥õ—å  ç·¥Ä…Ø–∏–Ω—É  ô–Ω–∏…ú | ‚¨áÔ∏è",  
         "üÜô | –í…ú·¥ß·¥á·¥õ·¥á·¥õ—å  ô—ã·¥Ñ·¥è·¥ã·¥è –Ω·¥Ä 15 ·¥©·¥Ä…ú | üÜô", 
         "‚úà | –ü·¥è·¥ß·¥á·¥õ ·¥õ·¥©·¥Ä–Ω·¥Ñ·¥®·¥è·¥©·¥õ·¥Ä | ‚úà",
         "üèé | –õ·¥Ä—É–Ω—á - ·¥ã·¥è–Ω·¥õ·¥©·¥è·¥ß—å | üèé", 
         "üöÄ | –ó·¥Ä·¥®—É·¥Ñ·¥ã  ô –Ω·¥á–±·¥è | üöÄ", 
         "üõ´ | –ó·¥Ä·¥®—É·¥Ñ·¥ã  ô ·¥ã·¥è·¥Ñ ç·¥è·¥Ñ | üõ´",

         }, nil, '') 
         if main10 == 1 then immortalitycar() end
         if main10 == 2 then suicidecar() end
         if main10 == 3 then hpcar() end
         if main10 == 4 then slapupcar() end
         if main10 == 5 then slapdowncar() end
         if main10 == 6 then raz() end
         if main10 == 7 then flycarr() end
         if main10 == 8 then launch() end
         if main10 == 9 then letgo() end
         if main10 == 10 then kosm() end
       
         end
         function flycarr()
         active = 0
    main122220002 = gg.choice({
        " ‚úÖ | –í·¥ã·¥ß—é—á–∏·¥õ—å ",
        " ‚ùå | –í—ã·¥ã·¥ß—é—á–∏·¥õ—å ", 
    }, nil, '')  
    
    if main122220002 == 1 then flycarron() end
    if main122220002 == 2 then flycarroff() end
end

function flycarron() 
    gg.clearResults()
    local searchValue = -4719772406288220160
    local offset = 0x188

    gg.setRanges(gg.REGION_C_BSS)
    gg.searchNumber(searchValue, gg.TYPE_QWORD)

    local results = gg.getResults(100)

    if #results == 0 then 
        gg.toast("–ó–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!")
        return 
    end 

    for i = 1, #results do 
        local address = results[i].address + offset
        
        gg.setValues({
            {
                address = address,
                flags = gg.TYPE_DWORD,
                value = 1,
            }
        })
    end 

    gg.toast("–ü–æ–ª–µ—Ç –≤–∫–ª—é—á–µ–Ω")
end

function flycarroff() 
    gg.clearResults()
    local searchValue = -4719772406288220160
    local offset = 0x188

    gg.setRanges(gg.REGION_C_BSS)
    gg.searchNumber(searchValue, gg.TYPE_QWORD)

    local results = gg.getResults(100)

    if #results == 0 then 
        gg.toast("–ó–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!")
        return 
    end 

    for i = 1, #results do 
        local address = results[i].address + offset
        
        gg.setValues({
            {
                address = address,
                flags = gg.TYPE_DWORD,
                value = 0,
            }
        })
    end 

    gg.toast("–ü–æ–ª–µ—Ç –≤—ã–∫–ª—é—á–µ–Ω ")
         
end
         function immortalitycar()
          gg.clearResults()
    local searchValue = 2379808 -- –ó–Ω–∞—á–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ –Ω–∞–π—Ç–∏
    local offset = 0xC8 -- –°–º–µ—â–µ–Ω–∏–µ –≤–Ω–∏–∑ (–≤ –±–∞–π—Ç–∞—Ö)

    gg.setRanges(gg.REGION_C_ALLOC)
    gg.searchNumber(searchValue, gg.TYPE_DWORD)
    
    local results = gg.getResults(gg.getResultsCount())
    
    if #results == 0 then
        gg.alert("–ó–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
        return
    end

    local itemsToFreeze = {}
    
    for i = 1, #results do
        local address = results[i].address + offset
        
        table.insert(itemsToFreeze, {
            address = address,
            flags = gg.TYPE_FLOAT,
            value = 1000,
            freeze = true -- –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –∑–∞–º–æ—Ä–æ–∑–∫–∏
        })
    end

    gg.addListItems(itemsToFreeze)
    
    gg.toast("–£—Å–ø–µ—à–Ω–æ, –≤–∞—à–∞ –º–∞—à–∏–Ω–∞ –Ω–µ—É—è–∑–≤–∏–º–∞")
    gg.clearResults() 
end
function suicidecar()
    gg.clearResults()
    local searchValue = 2379808 -- –ó–Ω–∞—á–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ –Ω–∞–π—Ç–∏
    local offset = 0xC8 -- –°–º–µ—â–µ–Ω–∏–µ –≤–Ω–∏–∑ (–≤ –±–∞–π—Ç–∞—Ö)

    gg.setRanges(gg.REGION_C_ALLOC)
    gg.searchNumber(searchValue, gg.TYPE_DWORD)

    local results = gg.getResults(gg.getResultsCount())

    if #results == 0 then
        gg.alert("–ó–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
        return
    end

    for i = 1, #results do
        local address = results[i].address + offset
        
        gg.setValues({
            {
                address = address,
                flags = gg.TYPE_FLOAT,
                value = 0,
            }
        })
    end

    gg.toast("–£—Å–ø–µ—à–Ω–æ, –≤–∞—à–∞ –º–∞—à–∏–Ω–∞ —É–±–∏—Ç–∞")
    gg.clearResults() 
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–¥–æ—Ä–æ–≤—å—è –º–∞—à–∏–Ω–µ
function hpcar() 
gg.clearResults()
    
    local searchValue = 2379808 -- –ó–Ω–∞—á–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ –Ω–∞–π—Ç–∏
    local offset = 0xC8 -- –°–º–µ—â–µ–Ω–∏–µ –≤–Ω–∏–∑ (–≤ –±–∞–π—Ç–∞—Ö)

    gg.setRanges(gg.REGION_C_ALLOC)
    gg.searchNumber(searchValue, gg.TYPE_DWORD)

    local results = gg.getResults(gg.getResultsCount())

   if #results == 0 then
       gg.alert("–ó–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
       return
   end

   -- –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∑–¥–æ—Ä–æ–≤—å—è 
   local userInput = gg.prompt({"–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 30 –¥–ª—è 30 HP):"}, {30}, {"number"})
   
   if userInput == nil then return end
   
   local newValue = tonumber(userInput[1]) * 10
   
   if newValue < 400 then 
       local warningResponse = gg.alert("–í–Ω–∏–º–∞–Ω–∏–µ! –ó–Ω–∞—á–µ–Ω–∏–µ –º–µ–Ω—å—à–µ 40. –ú–∞—à–∏–Ω–∞ –º–æ–∂–µ—Ç —Å–ª–æ–º–∞—Ç—å—Å—è. –í—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∑–∞–º–µ–Ω—É?", "–î–∞", "–ù–µ—Ç")
       
       if warningResponse == 2 then return end 
   end

   for i = 1, #results do
       local address = results[i].address + offset 
       
       gg.setValues({
           {
               address = address,
               flags = gg.TYPE_FLOAT,
               value = newValue,
           }
       })
   end

   gg.toast("–£—Å–ø–µ—à–Ω–æ") 
   gg.clearResults() 
end
function slapupcar() 
   gg.clearResults()  -- –û—á–∏—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
local searchValue = 404750497 -- –ó–Ω–∞—á–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ –Ω–∞–π—Ç–∏
local offset = 0x48 -- –°–º–µ—â–µ–Ω–∏–µ –≤–Ω–∏–∑ (–≤ –±–∞–π—Ç–∞—Ö)
local newValue = 0.5-- –ó–Ω–∞—á–µ–Ω–∏–µ, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å

function up()
    gg.setRanges(gg.REGION_C_ALLOC) -- –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –¥–∏–∞–ø–∞–∑–æ–Ω –ø–æ–∏—Å–∫–∞
    gg.searchNumber(searchValue, gg.TYPE_DWORD) -- –ü–æ–∏—Å–∫ –∑–Ω–∞—á–µ–Ω–∏—è

    local results = gg.getResults(gg.getResultsCount()) -- –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞

    if #results == 0 then
        gg.alert("–ó–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
        return
    end

    for i = 1, #results do
        local address = results[i].address + offset -- –í—ã—á–∏—Å–ª—è–µ–º –∞–¥—Ä–µ—Å —Å —É—á–µ—Ç–æ–º —Å–º–µ—â–µ–Ω–∏—è –≤–Ω–∏–∑
        
        -- –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞ 9999
        gg.setValues({
            {
                address = address,
                flags = gg.TYPE_FLOAT,
                value = newValue,
            }
        })
    end

    gg.toast("–ú–∞—à–∏–Ω–∞ –ø–æ–¥–∫–∏–Ω—É—Ç–∞") 
end
up()
end
function slapdowncar()
   gg.clearResults()  -- –û—á–∏—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
local searchValue = 404750497 -- –ó–Ω–∞—á–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ –Ω–∞–π—Ç–∏
local offset = 0x48 -- –°–º–µ—â–µ–Ω–∏–µ –≤–Ω–∏–∑ (–≤ –±–∞–π—Ç–∞—Ö)
local newValue = -0.5 -- –ó–Ω–∞—á–µ–Ω–∏–µ, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å

function down()
    gg.setRanges(gg.REGION_C_ALLOC) -- –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –¥–∏–∞–ø–∞–∑–æ–Ω –ø–æ–∏—Å–∫–∞
    gg.searchNumber(searchValue, gg.TYPE_DWORD) -- –ü–æ–∏—Å–∫ –∑–Ω–∞—á–µ–Ω–∏—è

    local results = gg.getResults(gg.getResultsCount()) -- –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞

    if #results == 0 then
        gg.alert("–ó–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
        return
    end

    for i = 1, #results do
        local address = results[i].address + offset -- –í—ã—á–∏—Å–ª—è–µ–º –∞–¥—Ä–µ—Å —Å —É—á–µ—Ç–æ–º —Å–º–µ—â–µ–Ω–∏—è –≤–Ω–∏–∑
        
        -- –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞ 9999
        gg.setValues({
            {
                address = address,
                flags = gg.TYPE_FLOAT,
                value = newValue,
            }
        })
    end

    gg.toast("–ú–∞—à–∏–Ω–∞ –æ–ø—É—â–µ–Ω–∞")
end
down()
end
function raz() 
local searchValue = 404750497
    local offset = 0x48

    gg.clearResults()
    gg.searchNumber(searchValue, gg.TYPE_DWORD)
    local resultsCount = gg.getResultCount()

    if resultsCount == 0 then
        print("–ó–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
        return
    end

    local results = gg.getResults(resultsCount)
    local modifyList = {}

    for i, res in ipairs(results) do
        local targetAddress = res.address + offset

        table.insert(modifyList, {
            address = targetAddress,
            flags = gg.TYPE_FLOAT,
            value = 1.5
        })
    end

    gg.setValues(modifyList) 
end
function launch() 
gg.clearResults()  -- –û—á–∏—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
local searchValue = 404750497 -- –ó–Ω–∞—á–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ –Ω–∞–π—Ç–∏
local offset = 0x44 -- –°–º–µ—â–µ–Ω–∏–µ –≤–Ω–∏–∑ (–≤ –±–∞–π—Ç–∞—Ö)
local newValue = 1.0 -- –ó–Ω–∞—á–µ–Ω–∏–µ, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å

function gau()
    gg.setRanges(gg.REGION_C_ALLOC) -- –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –¥–∏–∞–ø–∞–∑–æ–Ω –ø–æ–∏—Å–∫–∞
    gg.searchNumber(searchValue, gg.TYPE_DWORD) -- –ü–æ–∏—Å–∫ –∑–Ω–∞—á–µ–Ω–∏—è

    local results = gg.getResults(gg.getResultsCount()) -- –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞

    if #results == 0 then
        gg.alert("–ó–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
        return
    end

    for i = 1, #results do
        local address = results[i].address + offset -- –í—ã—á–∏—Å–ª—è–µ–º –∞–¥—Ä–µ—Å —Å —É—á–µ—Ç–æ–º —Å–º–µ—â–µ–Ω–∏—è –≤–Ω–∏–∑
        
        -- –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞ 9999
        gg.setValues({
            {
                address = address,
                flags = gg.TYPE_FLOAT,
                value = newValue,
            }
        })
    end

    gg.toast("–õ–∞—É–Ω—á-–ö–æ–Ω—Ç—Ä–æ–ª—å ON")
end
gau()
end
function letgo() 
gg.clearResults()  -- –û—á–∏—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
local searchValue = 404750497 -- –ó–Ω–∞—á–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ –Ω–∞–π—Ç–∏
local offset = 0x44 -- –°–º–µ—â–µ–Ω–∏–µ –≤–Ω–∏–∑ (–≤ –±–∞–π—Ç–∞—Ö)
local newValue = 5.0 -- –ó–Ω–∞—á–µ–Ω–∏–µ, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å

function immy()
    gg.setRanges(gg.REGION_C_ALLOC) -- –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –¥–∏–∞–ø–∞–∑–æ–Ω –ø–æ–∏—Å–∫–∞
    gg.searchNumber(searchValue, gg.TYPE_DWORD) -- –ü–æ–∏—Å–∫ –∑–Ω–∞—á–µ–Ω–∏—è

    local results = gg.getResults(gg.getResultsCount()) -- –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞

    if #results == 0 then
        gg.alert("–ó–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
        return
    end

    for i = 1, #results do
        local address = results[i].address + offset -- –í—ã—á–∏—Å–ª—è–µ–º –∞–¥—Ä–µ—Å —Å —É—á–µ—Ç–æ–º —Å–º–µ—â–µ–Ω–∏—è –≤–Ω–∏–∑
        
        -- –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞ 9999
        gg.setValues({
            {
                address = address,
                flags = gg.TYPE_FLOAT,
                value = newValue,
            }
        })
    end
gg.toast("–í–∑–ª–µ—Ç ON")
gg.clearResults() 
end
immy()
end
function flycar() 
    active = 0
    main16 = gg.choice({
        " ‚úÖ | –í·¥ã·¥ß—é—á–∏·¥õ—å ",
        " ‚ùå | –í—ã·¥ã·¥ß—é—á–∏·¥õ—å ", 
    }, nil, '')  

    if main16 == 1 then 
        ooooon() 
    elseif main16 == 2 then 
        oooooff() 
    end
end

function ooooon() 
    local searchValue = 404750497
    local offset = 0x48

    gg.clearResults()
    gg.setRanges(gg.REGION_C_ALLOC)
    gg.searchNumber(searchValue, gg.TYPE_DWORD)
    local resultsCount = gg.getResultCount()

    if resultsCount == 0 then
        print("–ó–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
        return
    end

    local results = gg.getResults(resultsCount)
    local freezeList = {}

    for i, res in ipairs(results) do
        local targetAddress = res.address + offset

        -- –ß–∏—Ç–∞–µ–º —Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ float –ø–æ –∞–¥—Ä–µ—Å—É
        local currentValue = gg.getValues({{address=targetAddress, flags=gg.TYPE_FLOAT}})[1].value

        table.insert(freezeList, {
            address = targetAddress,
            flags = gg.TYPE_FLOAT,
            value = currentValue,
            freeze = true
        })
    end

    -- –î–æ–±–∞–≤–ª—è–µ–º –≤ —Å–ø–∏—Å–æ–∫ –∑–∞–º–æ—Ä–æ–∑–∫–∏ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏–π
    gg.addListItems(freezeList)
end
function oooooff()
    local searchValue = 404750497 -- –ó–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –ø–æ–∏—Å–∫–∞ –±–µ—Å—Å–º–µ—Ä—Ç–∏—è.
    local offset = 0x48 -- –°–º–µ—â–µ–Ω–∏–µ.
    local newValue = 0 -- –ù–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –∑–∞–º–µ–Ω—ã.

    gg.setRanges(gg.REGION_C_ALLOC)
    gg.searchNumber(searchValue, gg.TYPE_DWORD)

    local results = gg.getResults(gg.getResultsCount())

    if #results == 0 then
        gg.toast("–ó–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
        return
    end

    for i = 1, #results do
        local address = results[i].address + offset
        
        -- –£–¥–∞–ª—è–µ–º –∑–∞–º–æ—Ä–æ–∑–∫—É —Å –∞–¥—Ä–µ—Å–∞
        gg.removeListItems({
            {
                address=address,
                flags=gg.TYPE_FLOAT,
            }
        })

        -- –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
        gg.setValues({
            {
                address=address,
                flags=gg.TYPE_FLOAT,
                value=newValue,
            }
        })
    end

    gg.toast("–õ–µ–≤–∏—Ç–∞—Ü–∏—è –æ—Ç–∫–ª—é—á–µ–Ω–∞ ") 
end
function visual() 
    active = 0
main20 = gg.choice({
         " üî¥ | RED CHAMS | üî¥",
         " üî≠ | FOV Hack | üî≠", 
         " üëª | ESP NickName | üëª",
         " ‚¨ú | –ü·¥©·¥è…ú·¥©·¥Ä—á–Ω—ã·¥á ·¥Ñ·¥õ·¥á–Ω—ã | ‚¨ú",
         " üåßÔ∏è | –í·¥ã·¥ß—é—á–∏·¥õ—å –¥·¥è–∂–¥—å | üåßÔ∏è",
         " ‚ö´ | Black Chams | ‚ö´",
         " üí• | –í…ú·¥©—ã ô·¥Ä·¥õ—å  ô·¥á·¥Ñ—å ·¥õ·¥©·¥Ä–Ω·¥Ñ·¥®·¥è·¥©·¥õ | üí•",
   --      " üí≤ | –í—ã–¥·¥Ä·¥õ—å  ô–∏·¥©·¥õ—ã ( ô ·¥ß·¥Ä—É–Ω—á·¥á·¥©·¥á) | üí≤",
    --     " ‚Ñ¢Ô∏è | –ò…ú ç·¥á–Ω–∏·¥õ—å –Ω–∏·¥ã–Ω·¥á–π ç ( ô ·¥ß·¥Ä—É–Ω—á·¥á·¥©·¥á) | ‚Ñ¢Ô∏è",
 --        " ‚ÑπÔ∏è | –ò…ú ç·¥á–Ω–∏·¥õ—å ·¥ß·¥è·¥¶–∏–Ω ( ô ·¥ß·¥Ä—É–Ω—á·¥á·¥©·¥á) | ‚ÑπÔ∏è",          
      }, nil, '')  
          if main20 == 1 then chams() end
          if main20 == 2 then fov() end
         if main20 == 3 then esp() end
         if main20 == 4 then walhack() end
           if main20 == 5 then osadki() end
           if main20 == 6 then blackchams() end
              if main20 == 7 then alah() end
           --   if main20 == 8 then money() end
        --      if main20 == 9 then nick() end
      --        if main20 == 10 then loginh() end
       --       end
    --          function nick()
     --         gg.alert("–ø–∏—Å—è")
            --  end
     --         function loginh()
          --                  gg.alert("–ø–∏—Å—è")
     --         end
         --     function money()
--gg.alert("gg")
end
function alah()
active = 0
    main212222000 = gg.choice({
        " ‚úÖ | –í·¥ã·¥ß—é—á–∏·¥õ—å ",
        " ‚ùå | –í—ã·¥ã·¥ß—é—á–∏·¥õ—å ", 
    }, nil, '')  
    
    if main212222000 == 1 then alahon() end
    if main212222000 == 2 then alahoff() end
end

function alahon() 
    gg.clearResults()
    local searchValue = 50.79999923706
    local offset = 56

    gg.setRanges(gg.REGION_CODE_APP)
    gg.searchNumber(searchValue, gg.TYPE_FLOAT)

    local results = gg.getResults(100)

    if #results == 0 then 
        gg.toast("–ó–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!")
        return 
    end 

    for i = 1, #results do 
        local address = results[i].address + offset
        
        gg.setValues({
            {
                address = address,
                flags = gg.TYPE_FLOAT,
                value = 1001,
            }
        })
    end 

    gg.toast("–í–∑—Ä—ã–≤—ã –≤–∫–ª—é—á–µ–Ω—ã")
end

function alahoff() 
    gg.clearResults()
    local searchValue = 50.79999923706
    local offset = 56

    gg.setRanges(gg.REGION_CODE_APP)
    gg.searchNumber(searchValue, gg.TYPE_FLOAT)

    local results = gg.getResults(100)

    if #results == 0 then 
        gg.toast("–ó–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!")
        return 
    end 

    for i = 1, #results do 
        local address = results[i].address + offset
        
        gg.setValues({
            {
                address = address,
                flags = gg.TYPE_FLOAT,
                value = 250,
            }
        })
    end 

    gg.toast("–í–∑—Ä—ã–≤—ã –≤—ã–∫–ª—é—á–µ–Ω—ã")
  
          end   
          function blackchams()
active = 0
    main21222200 = gg.choice({
        " ‚úÖ | –í·¥ã·¥ß—é—á–∏·¥õ—å ",
        " ‚ùå | –í—ã·¥ã·¥ß—é—á–∏·¥õ—å ", 
    }, nil, '')  
    
    if main21222200 == 1 then bllon() end
    if main21222200 == 2 then blloff() end
end

function bllon() 
    gg.clearResults()
    local searchValue = -999999.0
    local offset = 0x4

    gg.setRanges(gg.REGION_CODE_APP)
    gg.searchNumber(searchValue, gg.TYPE_FLOAT)

    local results = gg.getResults(100)

    if #results == 0 then 
        gg.toast("–ó–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!")
        return 
    end 

    for i = 1, #results do 
        local address = results[i].address + offset
        
        gg.setValues({
            {
                address = address,
                flags = gg.TYPE_FLOAT,
                value = -555,
            }
        })
    end 

    gg.toast("Black Chams –≤–∫–ª—é—á–µ–Ω")
end

function blloff() 
    gg.clearResults()
    local searchValue = -999999.0
    local offset = 0x4

    gg.setRanges(gg.REGION_CODE_APP)
    gg.searchNumber(searchValue, gg.TYPE_FLOAT)

    local results = gg.getResults(100)

    if #results == 0 then 
        gg.toast("–ó–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!")
        return 
    end 

    for i = 1, #results do 
        local address = results[i].address + offset
        
        gg.setValues({
            {
                address = address,
                flags = gg.TYPE_FLOAT,
                value = 0.04,
            }
        })
    end 

    gg.toast("Black chams –≤—ã–∫–ª—é—á–µ–Ω—ã")
   end
function osadki()
active = 0
    main21222000 = gg.choice({
        " ‚úÖ | –í·¥ã·¥ß—é—á–∏·¥õ—å ",
        " ‚ùå | –í—ã·¥ã·¥ß—é—á–∏·¥õ—å ", 
    }, nil, '')  
    
    if main21222000 == 1 then osdon() end
    if main21222000 == 2 then osdoff() end
end

function osdon() 
    gg.clearResults()
    local searchValue = 4515609228984729600
    local offset = 0x10

    gg.setRanges(gg.REGION_C_DATA)
    gg.searchNumber(searchValue, gg.TYPE_QWORD)

    local results = gg.getResults(100)

    if #results == 0 then 
        gg.toast("–ó–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!")
        return 
    end 

    for i = 1, #results do 
        local address = results[i].address - offset
        
        gg.setValues({
            {
                address = address,
                flags = gg.TYPE_FLOAT,
                value = -1,
            }
        })
    end 

    gg.toast("–î–æ–∂–¥—å –≤–∫–ª—é—á–µ–Ω")
end

function osdoff() 
    gg.clearResults()
    local searchValue = 4515609228984729600
    local offset = 0x10

    gg.setRanges(gg.REGION_C_DATA)
    gg.searchNumber(searchValue, gg.TYPE_QWORD)

    local results = gg.getResults(100)

    if #results == 0 then 
        gg.toast("–ó–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!")
        return 
    end 

    for i = 1, #results do 
        local address = results[i].address - offset
        
        gg.setValues({
            {
                address = address,
                flags = gg.TYPE_FLOAT,
                value = 0.004,
            }
        })
    end 

    gg.toast("–î–æ–∂–¥—å –≤—ã–∫–ª—é—á–µ–Ω")
    end
      function walhack()
    active = 0
    main212220 = gg.choice({
        " ‚úÖ | –í·¥ã·¥ß—é—á–∏·¥õ—å ",
        " ‚ùå | –í—ã·¥ã·¥ß—é—á–∏·¥õ—å ", 
    }, nil, '')  
    
    if main212220 == 1 then walon() end
    if main212220 == 2 then waloff() end
end

function walon() 
    gg.clearResults()
    local searchValue = 77190601328179
    local offset = 0x14

    gg.setRanges(gg.REGION_CODE_APP)
    gg.searchNumber(searchValue, gg.TYPE_QWORD)

    local results = gg.getResults(100)

    if #results == 0 then 
        gg.toast("–ó–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!")
        return 
    end 

    for i = 1, #results do 
        local address = results[i].address + offset
        
        gg.setValues({
            {
                address = address,
                flags = gg.TYPE_FLOAT,
                value = -5,
            }
        })
    end 

    gg.toast("–ü—Ä–æ–∑—Ä–∞—á–Ω—ã–µ —Å—Ç–µ–Ω—ã –≤–∫–ª—é—á–µ–Ω—ã")
end

function waloff() 
    gg.clearResults()
    local searchValue = 77190601328179
    local offset = 0x14

    gg.setRanges(gg.REGION_CODE_APP)
    gg.searchNumber(searchValue, gg.TYPE_QWORD)

    local results = gg.getResults(100)

    if #results == 0 then 
        gg.toast("–ó–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!")
        return 
    end 

    for i = 1, #results do 
        local address = results[i].address + offset
        
        gg.setValues({
            {
                address = address,
                flags = gg.TYPE_FLOAT,
                value = 1,
            }
        })
    end 

    gg.toast("–ü—Ä–æ–∑—Ä–∞—á–Ω—ã–µ —Å—Ç–µ–Ω—ã –≤—ã–∫–ª—é—á–µ–Ω—ã")
end
        function chams()   
          active = 0
main21 =  gg.choice({
         " ‚úÖ | –í·¥ã·¥ß—é—á–∏·¥õ—å ",
         " ‚ùå | –í—ã·¥ã·¥ß—é—á–∏·¥õ—å ", 
                  }, nil, '')  
          if main21 == 1 then chamson() end
          if main21 == 2 then chamsoff() end
          end
          function chamson() 
                     gg.clearResults()
   local searchValue=1132462073
   local offset=4 

   function change()
       gg.setRanges(gg.REGION_C_DATA)
       gg.searchNumber(searchValue,gg.TYPE_QWORD)

       local results=gg.getResults(gg.getResultsCount())

       if #results==0 then return end 

       for i=1,#results do 
           local address=results[i].address-offset
            
           gg.setValues({
               {
                   address=address,
                   flags=gg.TYPE_FLOAT,
                   value=-1,
               }
           })
       end 

       gg.toast("Chams –≤–∫–ª—é—á–µ–Ω—ã")
   end
   change()
end
function chamsoff() 
           gg.clearResults()
   local searchValue=1132462073
   local offset=4 

   function chang()
       gg.setRanges(gg.REGION_C_DATA)
       gg.searchNumber(searchValue,gg.TYPE_QWORD)

       local results=gg.getResults(gg.getResultsCount())

       if #results==0 then return end 

       for i=1,#results do 
           local address=results[i].address-offset
            
           gg.setValues({
               {
                   address=address,
                   flags=gg.TYPE_FLOAT,
                   value=1,
               }
           })
       end 

       gg.toast("Chams –≤–∫–ª—é—á–µ–Ω—ã")
   end
   chang()
   end
function fov() 
    active = 0
main21= gg.choice({
         " ‚úÖ | –í·¥ã·¥ß—é—á–∏·¥õ—å ",
         " ‚ùå | –í—ã·¥ã·¥ß—é—á–∏·¥õ—å ", 
                  }, nil, '')  
          if main21 == 1 then ofovon() end
          if main21 == 2 then ooofffov() end
          end   
          function ofovon() 
          gg.clearResults()
   local searchValue=4392630932140457984
   local offset=8

   function cange()
       gg.setRanges(gg.REGION_CODE_APP)
       gg.searchNumber(searchValue,gg.TYPE_QWORD)

       local results=gg.getResults(gg.getResultsCount())

       if #results==0 then return end 

       for i=1,#results do 
           local address=results[i].address-offset
            
           gg.setValues({
               {
                   address=address,
                   flags=gg.TYPE_FLOAT,
                   value=140, 
               }
           })
       end 

       gg.toast("Fov –≤–∫–ª—é—á–µ–Ω")
   end
   cange()
end
function esp()   
          active = 0
main2120 =  gg.choice({
         " ‚úÖ | –í·¥ã·¥ß—é—á–∏·¥õ—å ",
         " ‚ùå | –í—ã·¥ã·¥ß—é—á–∏·¥õ—å ", 
                  }, nil, '')  
          if main2120 == 1 then espon() end
          if main2120 == 2 then espoff() end
          end
          function espon() 
                     gg.clearResults()       
   local searchValue=1176256512
   local offset=8 

   function cnge()
       gg.setRanges(gg.REGION_C_BSS)
       gg.searchNumber(searchValue,gg.TYPE_DWORD)

       local results=gg.getResults(gg.getResultsCount())

       if #results==0 then return end 

       for i=1,#results do 
           local address=results[i].address+offset
            
           gg.setValues({
               {
                   address=address,
                   flags=gg.TYPE_FLOAT,
                   value=9999991,
               }
           })
       end 

       gg.toast("esp –≤–∫–ª—é—á–µ–Ω—ã")
   end
   cnge()
end
function espoff()        
   gg.setRanges(gg.REGION_C_BSS) -- –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–∏–∞–ø–∞–∑–æ–Ω –ø–æ–∏—Å–∫–∞
gg.searchNumber("9999991", gg.TYPE_FLOAT) -- –ü–æ–∏—Å–∫ –∑–Ω–∞—á–µ–Ω–∏—è 9999991
local results = gg.getResults(100) -- –ü–æ–ª—É—á–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞
for i = 1, #results do
    results[i].value = 20 -- –ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –Ω–∞ 20
end
gg.setValues(results) -- –ü—Ä–∏–º–µ–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è
gg.toast("esp –≤—ã–∫–ª—é—á–µ–Ω—ã") -- –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
   end
function ooofffov() 
gg.clearResults()
   local searchValue=4392630932140457984
   local offset=8

   function hange()
       gg.setRanges(gg.REGION_CODE_APP)
       gg.searchNumber(searchValue,gg.TYPE_QWORD)

       local results=gg.getResults(gg.getResultsCount())

       if #results==0 then return end 

       for i=1,#results do 
           local address=results[i].address-offset
            
           gg.setValues({
               {
                   address=address,
                   flags=gg.TYPE_FLOAT,
                   value=70,
               }
           })
       end 

       gg.toast("FOV –≤—ã–∫–ª—é—á–µ–Ω")
   end
   hange()
end
function gun() 
gg.clearResults() 
active = 0
main80 = gg.choice({
       "üî´ | –í—ã–¥·¥Ä—á·¥Ä ·¥è·¥©—É–∂–∏—è | üî´", 
       "‚¨ÖÔ∏è | –° ç·¥á—â·¥á–Ω–∏·¥á ·¥®·¥©–∏—Ü·¥á·¥ß·¥Ä | ‚û°Ô∏è", 
       "üèÅ | –ë·¥á·¥Ñ·¥ã·¥è–Ω·¥á—á–Ω—ã·¥á ·¥®·¥Ä·¥õ·¥©·¥è–Ω—ã | üèÅ", 
       "üåÄ | –ê–Ω·¥õ–∏–ü·¥á·¥©·¥á…ú·¥Ä·¥©—è–¥·¥ã·¥Ä | üåÄ", 
       "üî± | –ê–Ω·¥õ–∏ - –û·¥õ–¥·¥Ä—á·¥Ä | üî±",  
       "üß≤ | AimBot | üß≤", 
       "‚öîÔ∏è | –ë—ã·¥Ñ·¥õ·¥©·¥Ä—è ·¥Ñ·¥õ·¥©·¥á·¥ß—å–±·¥Ä/—Ö·¥è–¥—å–±·¥Ä | ‚öîÔ∏è",
       }, nil, '')
       if main80 == 1 then getgun() end
       if main80 == 2 then offpr() end
       if main80 == 3 then unpt() end
       if main80 == 4 then antiperez() end
       if main80 == 5 then norecoli() end
       if main80 == 6 then infiniteLoop() end
        if main80 == 7 then fastst() end
 end
 function fastst()
 active = 0
main88808 = gg.choice({     
         " ‚úÖ –í·¥ã·¥ß—é—á–∏·¥õ—å  ", 
         " ‚ùå –í—ã·¥ã·¥ß—é—á–∏·¥õ—å", 
                  }, nil, '')  
          if main88808 == 1 then faston() end
          if main88808 == 2 then fastoff() end
          end
          function faston() 
   gg.clearResults()  -- –û—á–∏—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
local searchValue = 4575657222535905280 -- –ó–Ω–∞—á–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ –Ω–∞–π—Ç–∏
local offset = 0x10 -- –°–º–µ—â–µ–Ω–∏–µ –≤–Ω–∏–∑ (–≤ –±–∞–π—Ç–∞—Ö)
local newValue = 10 -- –ó–Ω–∞—á–µ–Ω–∏–µ, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å

function fastone()
    gg.setRanges(gg.REGION_CODE_APP) -- –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –¥–∏–∞–ø–∞–∑–æ–Ω –ø–æ–∏—Å–∫–∞
    gg.searchNumber(searchValue, gg.TYPE_QWORD) -- –ü–æ–∏—Å–∫ –∑–Ω–∞—á–µ–Ω–∏—è

    local results = gg.getResults(gg.getResultsCount()) -- –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞

    if #results == 0 then
        gg.alert("–ó–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
        return
    end

    for i = 1, #results do
        local address = results[i].address + offset -- –í—ã—á–∏—Å–ª—è–µ–º –∞–¥—Ä–µ—Å —Å —É—á–µ—Ç–æ–º —Å–º–µ—â–µ–Ω–∏—è –≤–Ω–∏–∑
        
        -- –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞ 9999
        gg.setValues({
            {
                address = address,
                flags = gg.TYPE_FLOAT,
                value = newValue,
            }
        })
    end

    gg.toast("–í–∫–ª—é—á–µ–Ω–æ") 
end
fastone()
end
function fastoff()
gg.clearResults()  -- –û—á–∏—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
local searchValue = 4575657222535905280 -- –ó–Ω–∞—á–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ –Ω–∞–π—Ç–∏
local offset = 0x10 -- –°–º–µ—â–µ–Ω–∏–µ –≤–Ω–∏–∑ (–≤ –±–∞–π—Ç–∞—Ö)
local newValue = 1 -- –ó–Ω–∞—á–µ–Ω–∏–µ, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å

function fastoffe()
    gg.setRanges(gg.REGION_CODE_APP) -- –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –¥–∏–∞–ø–∞–∑–æ–Ω –ø–æ–∏—Å–∫–∞
    gg.searchNumber(searchValue, gg.TYPE_QWORD) -- –ü–æ–∏—Å–∫ –∑–Ω–∞—á–µ–Ω–∏—è

    local results = gg.getResults(gg.getResultsCount()) -- –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞

    if #results == 0 then
        gg.alert("–ó–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
        return
    end

    for i = 1, #results do
        local address = results[i].address + offset -- –í—ã—á–∏—Å–ª—è–µ–º –∞–¥—Ä–µ—Å —Å —É—á–µ—Ç–æ–º —Å–º–µ—â–µ–Ω–∏—è –≤–Ω–∏–∑
        
        -- –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞ 9999
        gg.setValues({
            {
                address = address,
                flags = gg.TYPE_FLOAT,
                value = newValue,
            }
        })
    end

    gg.toast("–í—ã–∫–ª—é—á–µ–Ω–æ") 
end
fastoffe()
end 
 function norecoli()
 active = 0
main8880 = gg.choice({
      
         " ‚úÖ –í·¥ã·¥ß—é—á–∏·¥õ—å  ", 
         " ‚ùå –í—ã·¥ã·¥ß—é—á–∏·¥õ—å", 
                  }, nil, '')  
          if main8880 == 1 then rexolion() end
          if main8880 == 2 then offricol() end
          end
          function rexolion() 
 gg.clearResults()
   local searchValue=3337261105772449345 
   local offset=0x28

   function recolion()
       gg.setRanges(gg.REGION_CODE_APP)
       gg.searchNumber(searchValue,gg.TYPE_QWORD)

       local results=gg.getResults(gg.getResultsCount())

       if #results==0 then return end 

       for i=1,#results do 
           local address=results[i].address+offset
            
           gg.setValues({
               {
                   address=address,
                   flags=gg.TYPE_FLOAT,
                   value=95,
               }
           })
       end 

       gg.toast("–ê–Ω—Ç–∏–û—Ç–¥–∞—á–∞ –≤–∫–ª—é—á–µ–Ω–∞ ")
   end
   
   recolion()
   end
   function offricol() 
   gg.clearResults()
   local searchValue=3337261105772449345 
   local offset=0x28

   function recolioff()
       gg.setRanges(gg.REGION_CODE_APP)
       gg.searchNumber(searchValue,gg.TYPE_QWORD)

       local results=gg.getResults(gg.getResultsCount())

       if #results==0 then return end 

       for i=1,#results do 
           local address=results[i].address+offset
            
           gg.setValues({
               {
                   address=address,
                   flags=gg.TYPE_FLOAT,
                   value=100.0 ,
               }
           })
       end 

       gg.toast("–ê–Ω—Ç–∏–û—Ç–¥–∞—á–∞ –≤—ã–∫–ª—é—á–µ–Ω–∞ ")
   end
   
   recolioff()
  
 end
 function getgun() 
 gg.alert("–í–æ–∑–º–æ–∂–µ–Ω –≤—ã–ª–µ—Ç –∏–∑ –∑–∞ –≤—ã–¥–∞—á–∏ –æ—Ä—É–∂–∏—è") 
    -- –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è —Å–º–µ—â–µ–Ω–∏—è 0xC0
    -- –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è —Å–º–µ—â–µ–Ω–∏—è 0xC0
    local userInputC0 = gg.prompt({"–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è ID –æ—Ä—É–∂–∏—è (1-46) :"}, {nil}, {"number"})

    if userInputC0 == nil then
        gg.toast("–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞")
        return
    end

    local newValueC0 = userInputC0[1]

    -- –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è —Å–º–µ—â–µ–Ω–∏—è 0xCC
    local userInputCC = gg.prompt({"–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Å–º–µ—â–µ–Ω–∏—è –ø–∞—Ç—Ä–æ–Ω–æ–≤ (0-30000) :"}, {nil}, {"number"})

    if userInputCC == nil then
        gg.toast("–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞")
        return
    end

    local newValueCC = userInputCC[1]

    -- –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–∏–∞–ø–∞–∑–æ–Ω –ø–æ–∏—Å–∫–∞
    gg.setRanges(gg.REGION_C_ALLOC)

    -- –ò—â–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ 100.14399719238
    gg.searchNumber("100.14399719238", gg.TYPE_FLOAT)

    -- –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞
    local results = gg.getResults(100)

    if #results == 0 then
        gg.toast("–ó–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
        return
    end

    -- –ò–∑–º–µ–Ω—è–µ–º –Ω–∞–π–¥–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —Å–º–µ—â–µ–Ω–∏—è–º 0xC0 –∏ 0xCC
    for i, v in ipairs(results) do
        v.value = 100.14399719238  -- –ú–µ–Ω—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞ —Ç–æ –∂–µ —Å–∞–º–æ–µ (–º–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏)
        gg.setValues({v})           -- –ü—Ä–∏–º–µ–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è

        -- –ú–µ–Ω—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —Å–º–µ—â–µ–Ω–∏—é 0xC0
        local addressC0 = v.address + 0xC0
        gg.setValues({
            {address = addressC0, value = newValueC0, flags = gg.TYPE_DWORD}  -- –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∫–∞–∫ dword
        })

        -- –ú–µ–Ω—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —Å–º–µ—â–µ–Ω–∏—é 0xCC
        local addressCC = v.address + 0xCC
        gg.setValues({
            {address = addressCC, value = newValueCC, flags = gg.TYPE_DWORD}  -- –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∫–∞–∫ dword
        })
    end

    gg.toast("–ó–Ω–∞—á–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω—ã")
end
 function unpt() 
gg.clearResults() -- –û—á–∏—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
local searchValue = 100.14399719238 -- –ó–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –ø–æ–∏—Å–∫–∞
local offset = 0xCC -- –°–º–µ—â–µ–Ω–∏–µ –≤–Ω–∏–∑ (–≤ –±–∞–π—Ç–∞—Ö)
local minResults = 3 -- –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –¥–ª—è –∑–∞–º–æ—Ä–æ–∑–∫–∏ (–±–æ–ª–µ–µ 2)

function freezeIfMoreThanTwoAndNotZero()
    gg.setRanges(gg.REGION_C_ALLOC) -- –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–∏–∞–ø–∞–∑–æ–Ω –ø–æ–∏—Å–∫–∞
    gg.searchNumber(searchValue, gg.TYPE_FLOAT) -- –ü–æ–∏—Å–∫ –∑–Ω–∞—á–µ–Ω–∏—è

    local resultsCount = gg.getResultsCount()
    if resultsCount < minResults then
        gg.alert("–ù–∞–π–¥–µ–Ω–æ –º–µ–Ω–µ–µ " .. minResults .. " –ø–∞—Ç—Ä–æ–Ω–æ–≤ (" .. resultsCount .. "). –ó–∞–º–æ—Ä–æ–∑–∫–∞ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞.")
        return
    end

    local results = gg.getResults(resultsCount)
    local frozenCount = 0

    for i = 1, resultsCount do
        local address = results[i].address + offset -- –ê–¥—Ä–µ—Å —Å —É—á–µ—Ç–æ–º —Å–º–µ—â–µ–Ω–∏—è
        local valueAtAddress = gg.getValues({{address=address, flags=gg.TYPE_DWORD}})[1].value

        if valueAtAddress > 0 then -- –ó–∞–º–æ—Ä–∞–∂–∏–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–µ —Ä–∞–≤–Ω–æ –Ω—É–ª—é
            gg.addListItems({ -- –î–æ–±–∞–≤–ª—è–µ–º –≤ —Å–ø–∏—Å–æ–∫ –¥–ª—è –∑–∞–º–æ—Ä–æ–∑–∫–∏
                {
                    address = address,
                    flags = gg.TYPE_DWORD,
                    freeze = true,
                }
            })
            frozenCount = frozenCount + 1
        end
    end

    if frozenCount > 0 then
        gg.toast("–ó–∞–º–æ—Ä–æ–∂–µ–Ω–æ " .. frozenCount .. " –ø–∞—Ç—Ä–æ–Ω–æ–≤.")
    else
        gg.alert("–ù–µ—Ç –ø–∞—Ç—Ä–æ–Ω–æ–≤ –¥–ª—è –∑–∞–º–æ—Ä–æ–∑–∫–∏ (–∑–Ω–∞—á–µ–Ω–∏—è —Ä–∞–≤–Ω—ã –Ω—É–ª—é).")
    end
end

freezeIfMoreThanTwoAndNotZero()
end
function antiperez() 
gg.clearResults() -- –û—á–∏—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
local searchValue = 100.14399719238 -- –ó–Ω–∞—á–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ –Ω–∞–π—Ç–∏
local offset = 0xC8 -- –°–º–µ—â–µ–Ω–∏–µ –≤–Ω–∏–∑ (–≤ –±–∞–π—Ç–∞—Ö)
local minResults = 2 -- –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –¥–ª—è –∑–∞–º–æ—Ä–æ–∑–∫–∏ (–±–æ–ª–µ–µ 2)

function freezeIfMoreThanTwo()
    gg.setRanges(gg.REGION_C_ALLOC) -- –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–∏–∞–ø–∞–∑–æ–Ω –ø–æ–∏—Å–∫–∞
    gg.searchNumber(searchValue, gg.TYPE_FLOAT) -- –ü–æ–∏—Å–∫ –∑–Ω–∞—á–µ–Ω–∏—è

    local resultsCount = gg.getResultsCount()
    if resultsCount < minResults then
        gg.alert("–ù–∞–π–¥–µ–Ω–æ –º–µ–Ω–µ–µ " .. (minResults) .. " –ø–∞—Ç—Ä–æ–Ω–æ–≤ (" .. resultsCount .. "). –ó–∞–º–æ—Ä–æ–∑–∫–∞ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞.")
        return
    end

    local results = gg.getResults(resultsCount)

    for i = 1, resultsCount do
        local address = results[i].address + offset -- –ê–¥—Ä–µ—Å —Å —É—á–µ—Ç–æ–º —Å–º–µ—â–µ–Ω–∏—è
        gg.addListItems({ -- –î–æ–±–∞–≤–ª—è–µ–º –≤ —Å–ø–∏—Å–æ–∫ –¥–ª—è –∑–∞–º–æ—Ä–æ–∑–∫–∏
            {
                address = address,
                flags = gg.TYPE_DWORD,
                freeze = true,
            }
        })
    end

    gg.toast("–ó–∞–º–æ—Ä–æ–∂–µ–Ω–æ " .. resultsCount .. " –ø–∞—Ç—Ä–æ–Ω–æ–≤.")
end

freezeIfMoreThanTwo()
    end
   function infiniteLoop()
        gg.setRanges(gg.REGION_OTHER)
        gg.searchNumber("1042536202", gg.TYPE_DWORD)
        gg.getResults(100)
        gg.editAll("1080099999", gg.TYPE_DWORD)
        gg.clearResults()
end
function offpr() 
    active = 0
main88 = gg.choice({
         " ‚¨ÖÔ∏è | –í–ª–µ–≤–æ ",
         " ‚û°Ô∏è | –í–ø—Ä–∞–≤–æ  ", 
         " ‚ùå –í—ã·¥ã·¥ß—é—á–∏·¥õ—å", 
                  }, nil, '')  
          if main88 == 1 then levo() end
          if main88 == 2 then pravo() end
          if main88 == 3 then offed() end
          end
          function levo() 
 gg.clearResults()
   local searchValue=77190601328179 
   local offset=0x18

   function Value()
       gg.setRanges(gg.REGION_CODE_APP)
       gg.searchNumber(searchValue,gg.TYPE_QWORD)

       local results=gg.getResults(gg.getResultsCount())

       if #results==0 then return end 

       for i=1,#results do 
           local address=results[i].address+offset
            
           gg.setValues({
               {
                   address=address,
                   flags=gg.TYPE_FLOAT,
                   value=-1.0,
               }
           })
       end 

       gg.toast("–ü—Ä–∏—Ü–µ–ª —Å–º–µ—â–µ–Ω")
   end
   
   Value()
   end
   function pravo() 
   gg.clearResults()
   local searchValue=77190601328179 
   local offset=0x18

   function lue()
       gg.setRanges(gg.REGION_CODE_APP)
       gg.searchNumber(searchValue,gg.TYPE_QWORD)

       local results=gg.getResults(gg.getResultsCount())

       if #results==0 then return end 

       for i=1,#results do 
           local address=results[i].address+offset
            
           gg.setValues({
               {
                   address=address,
                   flags=gg.TYPE_FLOAT,
                   value=1.0,
               }
           })
       end 

       gg.toast("–ü—Ä–∏—Ü–µ–ª —Å–º–µ—â–µ–Ω")
   end
   
   lue()
   end
   function offed() 
   gg.clearResults()
   local searchValue=77190601328179 
   local offset=0x18

   function ue()
       gg.setRanges(gg.REGION_CODE_APP)
       gg.searchNumber(searchValue,gg.TYPE_QWORD)

       local results=gg.getResults(gg.getResultsCount())

       if #results==0 then return end 

       for i=1,#results do 
           local address=results[i].address+offset
            
           gg.setValues({
               {
                   address=address,
                   flags=gg.TYPE_FLOAT,
                   value=0.20,
               }
           })
       end 

       gg.toast("–ü—Ä–∏—Ü–µ–ª —Å–º–µ—â–µ–Ω")
   end
   
   ue()
  
end
function xy()
active = 0
main1717 = gg.choice({
         " ‚¨ÜÔ∏è | –°–º–µ—â–µ—Ä–∏–µ X –≤–ø–µ—Ä–µ–¥ –Ω–∞ 2",
         " ‚¨áÔ∏è | –°–º–µ—â–µ–Ω–∏–µ X –Ω–∞–∑–∞–¥ –Ω–∞ 2", 
         " ‚û°Ô∏è | –°–º–µ—â–µ–Ω–∏–µ Y –≤ –ø—Ä–∞–≤–æ –Ω–∞ 2",
         " ‚¨ÖÔ∏è | –°–º–µ—â–µ–Ω–∏–µ Y –≤ –ª–µ–≤–æ  –Ω–∞ 2", 
                  }, nil, '')  
          if main1717 == 1 then xper() end
          if main1717 == 2 then xnaz() end
          if main1717 == 3 then yprav() end
          if main1717 == 4 then ylev() end

          end
          function xper()
   x(2.0)
end 

function xnaz()
   x(-2.0)
end 

function x(addValue)
   local searchValue=-1083007583
   local offset=0x29C 

   function changeV()
       gg.setRanges(gg.REGION_C_ALLOC)
       gg.searchNumber(searchValue,gg.TYPE_DWORD)

       local results=gg.getResults(gg.getResultsCount())

       if #results==0 then return end 

       for i=1,#results do 
           local address=results[i].address+offset
            
           local currentValue=gg.getValues({
               {
                   address=address,
                   flags=gg.TYPE_FLOAT,
               }
           })[1].value 

           local newValue=currentValue+addValue 

           gg.setValues({
               {
                   address=address,
                   flags=gg.TYPE_FLOAT,
                   value=newValue,
               }
           })
       end 

       if addValue>0 then 
           gg.toast ("–í—ã –±—ã–ª–∏ —Å–º–µ—â–µ–Ω—ã –Ω–∞ 2 –ø–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–µ X") 
       else 
           gg.toast ("–í—ã –±—ã–ª–∏ —Å–º–µ—â–µ–Ω—ã –Ω–∞ 2 –ø–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–µ X") 
       end  
   end

   changeV()
   end
   function yprav()
   ycord(2.0)
end 

function ylev()
   ycord(-2.0)
end 

function ycord(addValue)
   local searchValue=-1083007583
   local offset=0x2A0

   function changalue()
       gg.setRanges(gg.REGION_C_ALLOC)
       gg.searchNumber(searchValue,gg.TYPE_DWORD)

       local results=gg.getResults(gg.getResultsCount())

       if #results==0 then return end 

       for i=1,#results do 
           local address=results[i].address+offset
            
           local currentValue=gg.getValues({
               {
                   address=address,
                   flags=gg.TYPE_FLOAT,
               }
           })[1].value 

           local newValue=currentValue+addValue 

           gg.setValues({
               {
                   address=address,
                   flags=gg.TYPE_FLOAT,
                   value=newValue,
               }
           })
       end 

       if addValue>0 then 
           gg.toast ("–í—ã –±—ã–ª–∏ —Å–º–µ—â–µ–Ω—ã –ø–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–µ Y") 
       else 
           gg.toast ("–í—ã –±—ã–ª–∏ —Å–º–µ—â–µ–Ω—ã –ø–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–µ Y") 
       end  
   end

   changalue()
   end
   function povor()
   active = 0
main8118 = gg.choice({
         " ‚úÖ –í·¥ã·¥ß—é—á–∏·¥õ—å ", 
         " ‚ùå –í—ã·¥ã·¥ß—é—á–∏·¥õ—å", 
                  }, nil, '')  
          if main8118 == 1 then onedd() end
          if main8118 == 2 then offedd() end
          end
          function onedd()
          gg.clearResults()
   local searchValue=100.14399719238     
   local offset=0x1C

   function cgeValue()
       gg.setRanges(gg.REGION_C_ALLOC)
       gg.searchNumber(searchValue,gg.TYPE_FLOAT)

       local results=gg.getResults(gg.getResultsCount())

       if #results==0 then return end 

       for i=1,#results do 
           local address=results[i].address+offset
            
           gg.setValues({
               {
                   address=address,
                   flags=gg.TYPE_FLOAT,
                   value=532.7,
               }
           })
       end 

       gg.toast("–ë—ã—Å—Ç—Ä—ã–µ –ø–æ–≤–æ—Ä–æ—Ç—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω—ã")
   end
   
   cgeValue()
   end
   function offedd()
      gg.setRanges(gg.REGION_C_ALLOC) -- –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–∏–∞–ø–∞–∑–æ–Ω –ø–æ–∏—Å–∫–∞
gg.searchNumber("532.7", gg.TYPE_FLOAT) -- –ü–æ–∏—Å–∫ –∑–Ω–∞—á–µ–Ω–∏—è 9999991
local results = gg.getResults(100) -- –ü–æ–ª—É—á–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞
for i = 1, #results do
    results[i].value = 7.5 -- –ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –Ω–∞ 20
end
gg.setValues(results) -- –ü—Ä–∏–º–µ–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è
gg.toast("–†–µ–∑–∫–∏–µ –ø–æ–≤–æ—Ä–æ—Ç—ã –≤—ã–∫–ª—é—á–µ–Ω—ã") -- –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
   end
  
   function kosm()
   gg.clearResults()  -- –û—á–∏—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
local searchValue = 404750497 -- –ó–Ω–∞—á–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ –Ω–∞–π—Ç–∏
local offset = 0x48 -- –°–º–µ—â–µ–Ω–∏–µ –≤–Ω–∏–∑ (–≤ –±–∞–π—Ç–∞—Ö)
local newValue = 10.0 -- –ó–Ω–∞—á–µ–Ω–∏–µ, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å

function kosmo()
    gg.setRanges(gg.REGION_C_ALLOC) -- –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –¥–∏–∞–ø–∞–∑–æ–Ω –ø–æ–∏—Å–∫–∞
    gg.searchNumber(searchValue, gg.TYPE_DWORD) -- –ü–æ–∏—Å–∫ –∑–Ω–∞—á–µ–Ω–∏—è

    local results = gg.getResults(gg.getResultsCount()) -- –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞

    if #results == 0 then
        gg.alert("–ó–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
        return
    end

    for i = 1, #results do
        local address = results[i].address + offset -- –í—ã—á–∏—Å–ª—è–µ–º –∞–¥—Ä–µ—Å —Å —É—á–µ—Ç–æ–º —Å–º–µ—â–µ–Ω–∏—è –≤–Ω–∏–∑
        
        -- –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞ 9999
        gg.setValues({
            {
                address = address,
                flags = gg.TYPE_FLOAT,
                value = newValue,
            }
        })
    end

    gg.toast("–ú–∞—à–∏–Ω–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ –∫–æ—Å–º–æ—Å") 
end
kosmo() 
end
function exit()
   os.exit()
end 

local active= false

while true do 
   if gg.isVisible(true) then    
       active=true    
       gg.setVisible(false)    
   end    
   
   if active==true then     
       menu()
       active=false -- —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥ –ø–æ—Å–ª–µ –≤—ã–∑–æ–≤–∞ –º–µ–Ω—é —á—Ç–æ–±—ã –Ω–µ –∑–∞—Ü–∏–∫–ª–∏–≤–∞—Ç—å –≤—ã–∑–æ–≤  
   end    
end
